{"version":3,"file":"field-editor-rich-text.cjs.production.min.js","sources":["../src/plugins/List/EditListWrapper.js","../src/constants/Schema.js","../src/plugins/shared/PluginApi.js","../src/plugins/shared/ToolbarIcon.js","../src/plugins/shared/PropTypes.js","../src/plugins/shared/UtilHave.js","../src/plugins/shared/MarkPlugin.js","../src/plugins/shared/MarkDecorator.js","../src/plugins/shared/Util.js","../src/plugins/shared/MarkToggleDecorator.js","../src/plugins/Bold/index.js","../src/plugins/Italic/index.js","../src/plugins/Underlined/index.js","../src/plugins/Code/index.js","../src/plugins/shared/BlockToggleDecorator.js","../src/plugins/Quote/Util.js","../src/plugins/shared/NodeDecorator.js","../src/plugins/Quote/QuotePlugin.js","../src/plugins/Quote/index.js","../../../node_modules/regenerator-runtime/runtime.js","../src/plugins/EmbeddedEntityBlock/FetchingWrappedEntryCard.js","../src/plugins/EmbeddedEntityBlock/FetchingWrappedAssetCard.js","../src/dialogs/HypelinkDialog/HyperlinkDialog.jsx","../src/helpers/getLinkedContentTypeIdsForNodeType.js","../src/helpers/newEntitySelectorConfigFromRichTextField.js","../src/validations/index.js","../src/plugins/Hyperlink/Util.js","../src/plugins/Hyperlink/ToolbarIcon.js","../src/plugins/Hyperlink/styles.js","../src/helpers/browserSupport.js","../src/plugins/Hyperlink/useRequestStatus.js","../src/plugins/Hyperlink/Hyperlink.js","../src/plugins/Hyperlink/truncate.js","../src/plugins/Hyperlink/index.js","../src/plugins/shared/ToolbarDropdownListItem.js","../src/plugins/shared/BlockSelectDecorator.js","../src/plugins/Heading/HeadingDropdown.js","../src/plugins/Heading/HeadingDropdownItem.js","../src/plugins/Heading/Paragraph.js","../src/plugins/Heading/index.js","../src/plugins/EmbeddedEntityBlock/Util.js","../src/plugins/EmbeddedEntityBlock/EmbeddedEntityBlock.styles.ts","../src/plugins/EmbeddedEntityBlock/ToolbarIcon.js","../src/plugins/EmbeddedEntityBlock/EmbeddedEntityBlock.js","../src/plugins/EmbeddedEntityBlock/index.js","../src/plugins/EmbeddedEntryInline/Utils.js","../src/plugins/EmbeddedEntryInline/EmbeddedEntryInline.styles.ts","../src/plugins/EmbeddedEntryInline/ToolbarIcon.js","../src/plugins/EmbeddedEntryInline/FetchingWrappedInlineEntryCard.js","../src/plugins/EmbeddedEntryInline/EmbeddedEntryInline.js","../src/plugins/EmbeddedEntryInline/index.js","../src/plugins/List/ToolbarDecorator.js","../src/plugins/List/index.js","../src/plugins/Hr/index.js","../src/plugins/Paste/Paste.js","../src/plugins/Paste/index.js","../src/plugins/PasteHtml/Serializer.js","../src/plugins/CommandPalette/Util.js","../src/plugins/CommandPalette/CommandPaletteService.js","../src/plugins/CommandPalette/CommandPanel/CommandPanelMenu.js","../src/plugins/CommandPalette/CommandPanel/InViewport/InViewport.js","../src/plugins/CommandPalette/CommandPanel/index.js","../src/plugins/CommandPalette/CommandPalette.js","../src/plugins/CommandPalette/CommandMark.js","../src/plugins/CommandPalette/index.js","../src/plugins/index.js","../src/plugins/InsertBeforeFirstVoidBlock/index.js","../src/plugins/InsertBeforeFirstVoidBlock/Util.js","../src/plugins/Paragraph/index.js","../src/plugins/PasteHtml/index.js","../src/plugins/PasteText/index.js","../src/plugins/NewLinePlugin/index.js","../src/plugins/EntryEmbedDropdown/index.js","../src/Toolbar/index.js","../src/Toolbar/StickyToolbarWrapper.js","../src/RichTextEditor.jsx","../src/dialogs/openRichTextDialog.jsx","../src/dialogs/renderRichTextDialog.jsx"],"sourcesContent":["import { BLOCKS } from '@contentful/rich-text-types';\nimport EditList from '@productboard/slate-edit-list';\n\nexport default (opt) => {\n  const config = {\n    types: [BLOCKS.OL_LIST, BLOCKS.UL_LIST],\n    typeItem: BLOCKS.LIST_ITEM,\n    typeDefault: BLOCKS.PARAGRAPH,\n    ...opt,\n  };\n\n  const plugin = EditList(config);\n\n  return plugin;\n};\n","import fromPairs from 'lodash/fromPairs';\nimport {\n  BLOCKS,\n  INLINES,\n  TOP_LEVEL_BLOCKS,\n  VOID_BLOCKS,\n  CONTAINERS,\n} from '@contentful/rich-text-types';\n\nimport ListPlugin from '../plugins/List/EditListWrapper';\n\nconst mapVoidTypes = (nodeTypes) => {\n  return fromPairs(nodeTypes.map((nodeType) => [nodeType, { isVoid: true }]));\n};\n\nconst listPlugin = ListPlugin();\n\nexport default {\n  document: {\n    nodes: [\n      {\n        types: TOP_LEVEL_BLOCKS,\n      },\n    ],\n  },\n  blocks: {\n    [BLOCKS.PARAGRAPH]: {\n      nodes: [\n        {\n          types: Object.values(INLINES),\n        },\n        {\n          objects: ['text', 'inline'],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_1]: {\n      nodes: [\n        {\n          types: Object.values(INLINES),\n        },\n        {\n          objects: ['text', 'inline'],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_2]: {\n      nodes: [\n        {\n          types: Object.values(INLINES),\n        },\n        {\n          objects: ['text', 'inline'],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_3]: {\n      nodes: [\n        {\n          types: Object.values(INLINES),\n        },\n        {\n          objects: ['text', 'inline'],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_4]: {\n      nodes: [\n        {\n          types: Object.values(INLINES),\n        },\n        {\n          objects: ['text', 'inline'],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_5]: {\n      nodes: [\n        {\n          types: Object.values(INLINES),\n        },\n        {\n          objects: ['text', 'inline'],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_6]: {\n      nodes: [\n        {\n          types: Object.values(INLINES),\n        },\n        {\n          objects: ['text', 'inline'],\n        },\n      ],\n    },\n    ...mapVoidTypes(VOID_BLOCKS),\n    // The schema for the lists and list-items is defined in the slate-edit-list plugin.\n    // Due to the bug in slate@0.44.9 we have to stitch the schema manually.\n    // Related bug ticket AUTH-888\n    ...listPlugin.schema.blocks,\n    [BLOCKS.QUOTE]: {\n      nodes: [\n        {\n          match: [CONTAINERS[BLOCKS.QUOTE].map((type) => ({ type }))],\n          min: 1,\n        },\n      ],\n      normalize: (editor, error) => {\n        if (error.code === 'child_type_invalid') {\n          return editor.unwrapBlockByKey(error.node.key, BLOCKS.QUOTE);\n        }\n      },\n    },\n  },\n  inlines: {\n    [INLINES.HYPERLINK]: {\n      nodes: [\n        {\n          objects: ['text'],\n        },\n      ],\n    },\n    [INLINES.ENTRY_HYPERLINK]: {\n      nodes: [\n        {\n          objects: ['text'],\n        },\n      ],\n    },\n    [INLINES.ASSET_HYPERLINK]: {\n      nodes: [\n        {\n          objects: ['text'],\n        },\n      ],\n    },\n    [INLINES.EMBEDDED_ENTRY]: {\n      isVoid: true,\n    },\n  },\n};\n","import PropTypes from 'prop-types';\n\n/**\n * All known origins for Rich Text actions\n * @type {object}\n */\nexport const actionOrigin = {\n  TOOLBAR: 'toolbar-icon',\n  SHORTCUT: 'shortcut',\n  VIEWPORT: 'viewport-interaction',\n  COMMAND_PALETTE: 'command-palette',\n};\n\nconst createActionLogger = (onAction, origin) => (name, data) => {\n  onAction(name, { origin, ...data });\n};\n\n/**\n * Creates an api that is passed to editor and toolbar widgets.\n *\n * @param {object} sdk\n * @param {function } onAction\n * @returns {{ sdk: {object}, logViewportAction: {function}, createActionLogger: {function}, createActionLogger: {function} }}\n */\nexport const createRichTextAPI = ({ sdk, onAction }) => {\n  const richTextAPI = {\n    sdk,\n    logViewportAction: createActionLogger(onAction, actionOrigin.VIEWPORT),\n    logShortcutAction: createActionLogger(onAction, actionOrigin.SHORTCUT),\n    logToolbarAction: createActionLogger(onAction, actionOrigin.TOOLBAR),\n    logCommandPaletteAction: createActionLogger(onAction, actionOrigin.COMMAND_PALETTE),\n  };\n  return richTextAPI;\n};\n\n/**\n * Describes the prop types a Rich Text editor plugin can expect.\n * @type {object}\n */\nexport const EDITOR_PLUGIN_PROP_TYPES = {\n  richTextAPI: PropTypes.shape({\n    sdk: PropTypes.object.isRequired,\n    logViewportAction: PropTypes.func.isRequired,\n    logShortcutAction: PropTypes.func.isRequired,\n    logToolbarAction: PropTypes.func.isRequired,\n  }),\n};\n\n/**\n * Describes the prop types a Rich Text toolbar plugin can expect.\n * @type {object}\n */\nexport const TOOLBAR_PLUGIN_PROP_TYPES = {\n  ...EDITOR_PLUGIN_PROP_TYPES,\n  editor: PropTypes.object.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  isButton: PropTypes.bool,\n  // TODO: Should get rid of this as it's just necessary as a hack to prevent\n  //  crashes before the user manually set the focus to the Slate input.\n  canAutoFocus: PropTypes.bool,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from 'emotion';\nimport { Button, Tooltip } from '@contentful/f36-components';\nimport tokens from '@contentful/f36-tokens';\n\nconst styles = {\n  button: css({\n    height: '30px',\n    width: '30px',\n    marginLeft: tokens.spacing2Xs,\n    marginRight: tokens.spacing2Xs,\n  }),\n\n  tooltip: css({\n    zIndex: Number(tokens.zIndexTooltip),\n  }),\n};\n\nexport default class ToolbarIcon extends Component {\n  static propTypes = {\n    isActive: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    children: PropTypes.any.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    className: PropTypes.string,\n  };\n\n  handleClick = (event) => {\n    event.preventDefault();\n    this.props.onToggle(event);\n  };\n\n  render() {\n    const { title, type, isActive, children, className, disabled = false } = this.props;\n\n    const button = (\n      <Button\n        className={cx(styles.button, className)}\n        isDisabled={disabled}\n        startIcon={children}\n        onClick={this.handleClick}\n        testId={`toolbar-toggle-${type}`}\n        variant={isActive ? 'secondary' : 'transparent'}\n        size=\"small\"\n      />\n    );\n\n    if (title) {\n      return (\n        <Tooltip className={styles.tooltip} placement=\"top\" content={title}>\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport const MarkPropTypes = {\n  attributes: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n  mark: PropTypes.string.isRequired,\n};\n\nexport const NodePropTypes = {\n  attributes: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n  node: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","export const haveMarks = ({ value }, type) => {\n  return value.activeMarks.some((mark) => mark.type === type);\n};\n\nexport const haveBlocks = ({ value }, type) => {\n  return value.blocks.some((node) => node.type === type);\n};\n\nexport const haveInlines = ({ value }, type) => {\n  return value.inlines.some((inline) => inline.type === type);\n};\n\nexport function haveAnyInlines({ value }) {\n  return value.inlines.size > 0;\n}\n\n/**\n * Checks if all inline nodes in the selectin have a certain type.\n * Returns false if there are no inline nodes in the selection.\n *\n * @param {slate.Editor} editor\n * @param {string} type\n * @returns {boolean}\n */\nexport function haveEveryInlineOfType({ value }, type) {\n  if (value.inlines.size > 0) {\n    return value.inlines.every((inline) => inline.type === type);\n  }\n\n  return false;\n}\n\nexport const haveTextInSomeBlocks = ({ value }) => {\n  if (value.blocks.size > 0) {\n    return value.blocks.some((block) => block.text);\n  }\n};\n","import isHotkey from 'is-hotkey';\nimport markDecorator from './MarkDecorator';\nimport { haveMarks } from './UtilHave';\nimport { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nconst styles = {\n  // TODO: Ensure a bold mark on a headline makes the heading appear even\n  //  bolder. Consider to make headings non-bold by default.\n  bold: css({\n    color: 'inherit',\n    fontWeight: tokens.fontWeightDemiBold,\n  }),\n  italic: css({\n    fontStyle: 'italic',\n    lineHeight: 1, // Prevents vertical jitter effect when applying code mark.\n  }),\n  code: css({\n    fontFamily: tokens.fontStackMonospace,\n    fontSize: '.9em', // Can't use `rem` to account for code inside a heading.\n  }),\n};\n\nexport default function ({ type, tagName, hotkey, richTextAPI }) {\n  return {\n    renderMark: (props, _editor, next) => {\n      if (props.mark.type === type) {\n        return markDecorator(tagName, { className: styles[type] })(props);\n      }\n      return next();\n    },\n    onKeyDown(event, editor, next) {\n      if (isHotkey(hotkey, event)) {\n        editor.toggleMark(type);\n\n        const action = haveMarks(editor, type) ? 'mark' : 'unmark';\n        richTextAPI.logShortcutAction(action, { markType: type });\n        return;\n      }\n      return next();\n    },\n  };\n}\n","import React from 'react';\nimport { MarkPropTypes } from './PropTypes';\n\nexport default function (Tag, tagProps = {}) {\n  const CommonMark = ({ attributes, children }) => {\n    return (\n      <Tag {...tagProps} {...attributes}>\n        {children}\n      </Tag>\n    );\n  };\n\n  CommonMark.displayName = `${Tag}-mark`;\n  CommonMark.propTypes = MarkPropTypes;\n\n  return CommonMark;\n}\n","/**\n * Handles setting the focus in the Slate editor (if possible due to Slate restrictions)\n * when clicking on a toolbar acton while the editor got no focus.\n *\n * Ideally we would always focus the editor in his case, but this might result\n * in a Slate crash if the editor hasn't been manually focused by the user at\n * that point.\n */\nexport const toolbarActionHandlerWithSafeAutoFocus = (component, customHandler) => (event) => {\n  event.preventDefault();\n\n  const { editor, canAutoFocus } = component.props;\n\n  if (!editor.value.selection.isFocused) {\n    if (canAutoFocus) {\n      editor.focus();\n    } else {\n      // Note: This is only necessary as Slate in 0.4x in our case crashes when\n      //  working on the document before the user manually focuses. Attempts at\n      //  programmatically setting focus and a proper value.selection were in vain.\n      // TODO: Upgrade Slate or figure out how to editor.setFocus when clicking\n      //  a toolbar icon without the editor crashing when starting to type.\n      return;\n    }\n  }\n  return customHandler(event);\n};\n","import * as React from 'react';\nimport { haveMarks } from './UtilHave';\nimport { toolbarActionHandlerWithSafeAutoFocus } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from './PluginApi';\n\nexport default ({ type, title, children }) =>\n  (Mark) => {\n    return class CommonToggleMark extends React.Component {\n      static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n      handleToggle = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n        const {\n          editor,\n          onToggle,\n          richTextAPI: { logToolbarAction },\n        } = this.props;\n        onToggle(editor.toggleMark(type));\n        const action = haveMarks(editor, type) ? 'mark' : 'unmark';\n        logToolbarAction(action, { markType: type });\n      });\n\n      render() {\n        const { editor, disabled } = this.props;\n        return (\n          <Mark\n            type={type}\n            title={title}\n            onToggle={this.handleToggle}\n            isActive={haveMarks(editor, type)}\n            disabled={disabled}>\n            {children}\n          </Mark>\n        );\n      }\n    };\n  };\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\nimport { FormatBoldIcon } from '@contentful/f36-icons';\n\nexport const BoldPlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.BOLD,\n    tagName: 'b',\n    hotkey: ['mod+b'],\n    richTextAPI,\n  });\n};\n\nclass Bold extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.BOLD,\n  title: 'Bold',\n  children: <FormatBoldIcon />,\n})(Bold);\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\nimport { FormatItalicIcon } from '@contentful/f36-icons';\n\nexport const ItalicPlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.ITALIC,\n    tagName: 'em',\n    hotkey: ['mod+i'],\n    richTextAPI,\n  });\n};\n\nclass Italic extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.ITALIC,\n  title: 'Italic',\n  children: <FormatItalicIcon />,\n})(Italic);\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\nimport { FormatUnderlinedIcon } from '@contentful/f36-icons';\n\nexport const UnderlinedPlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.UNDERLINE,\n    tagName: 'u',\n    hotkey: ['mod+u'],\n    richTextAPI,\n  });\n};\n\nclass Underlined extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.UNDERLINE,\n  title: 'Underline',\n  children: <FormatUnderlinedIcon />,\n})(Underlined);\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\nimport { CodeIcon } from '@contentful/f36-icons';\n\nexport const CodePlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.CODE,\n    tagName: 'code',\n    hotkey: ['mod+/'],\n    richTextAPI,\n  });\n};\n\nclass Code extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.CODE,\n  title: 'Code',\n  children: <CodeIcon />,\n})(Code);\n","import * as React from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { haveBlocks } from './UtilHave';\nimport { toolbarActionHandlerWithSafeAutoFocus } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from './PluginApi';\n\n/**\n * Toggles formatting between a given node type and a plain paragraph.\n *\n * @param {slate.Editor} editor\n * @param {stirng} type\n * @returns {boolean} New toggle state after the change.\n */\nexport const toggleChange = (editor, type) => {\n  const isActive = haveBlocks(editor, type);\n  editor.setBlocks(isActive ? BLOCKS.PARAGRAPH : type);\n  return !isActive;\n};\n\nconst isBlockActive = (editor, type) => haveBlocks(editor, type);\n\nexport default ({ type, title, children, applyChange = toggleChange, isActive = isBlockActive }) =>\n  (Block) => {\n    return class BlockToggleDecorator extends React.Component {\n      static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n      handleToggle = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n        const {\n          editor,\n          onToggle,\n          richTextAPI: { logToolbarAction },\n        } = this.props;\n        const isActive = applyChange(editor, type);\n        onToggle(editor);\n        const actionName = isActive ? 'insert' : 'remove';\n        logToolbarAction(actionName, { nodeType: type });\n      });\n\n      render() {\n        const { editor, disabled, richTextAPI } = this.props;\n\n        return (\n          <Block\n            type={type}\n            title={title}\n            onToggle={this.handleToggle}\n            isActive={isActive(editor, type)}\n            disabled={disabled}\n            richTextAPI={richTextAPI}>\n            {children}\n          </Block>\n        );\n      }\n    };\n  };\n","import { BLOCKS } from '@contentful/rich-text-types';\n\nconst getParent = (editor) => {\n  const range = editor.value.selection;\n\n  if (!range.start.key) {\n    return null;\n  }\n\n  const startBlock = editor.value.document.getClosestBlock(range.start.key);\n\n  return editor.value.document.getParent(startBlock.key);\n};\n\nexport const isSelectionInQuote = (editor) => {\n  const ancestor = getParent(editor);\n\n  if (!ancestor) {\n    return false;\n  }\n\n  return ancestor.type === BLOCKS.QUOTE;\n};\n\n/**\n * Toggles formatting between block quote and a plain paragraph.\n *\n * @param {slate.Editor} editor\n * @returns {boolean} New toggle state after the change.\n */\nexport const applyChange = (editor) => {\n  const isActive = isSelectionInQuote(editor);\n  if (isActive) {\n    editor.unwrapBlock(BLOCKS.QUOTE);\n  } else {\n    editor.setBlocks(BLOCKS.PARAGRAPH).wrapBlock(BLOCKS.QUOTE);\n  }\n  return !isActive;\n};\n","import * as React from 'react';\nimport { NodePropTypes } from './PropTypes';\nimport { css } from 'emotion';\nimport camelCase from 'lodash/camelCase';\nimport tokens from '@contentful/f36-tokens';\n\nconst headingCss = {\n  fontWeight: tokens.fontWeightMedium,\n  lineHeight: '1.3',\n  margin: `0 0 ${tokens.spacingS}`,\n};\n\nconst styles = {\n  paragraph: css({\n    lineHeight: tokens.lineHeightDefault,\n    marginBottom: '1.5em',\n  }),\n  bold: css({\n    color: 'inherit',\n    fontWeight: tokens.fontWeightDemiBold,\n  }),\n  blockquote: css({\n    margin: '0 0 1.3125rem',\n    borderLeft: `6px solid ${tokens.gray200}`,\n    paddingLeft: '0.875rem',\n    fontStyle: 'normal',\n    '& a': {\n      color: 'inherit',\n    },\n  }),\n  code: css({\n    background: tokens.gray200,\n    padding: '0px',\n    color: tokens.gray700,\n    borderRadius: tokens.borderRadiusSmall,\n  }),\n  textLink: css({\n    fontSize: 'inherit',\n  }),\n  orderedList: css({\n    margin: '0 0 1.25rem 1.25rem',\n    listStyleType: 'decimal',\n    '[data-test-id=\"ordered-list\"]': {\n      listStyleType: 'upper-alpha',\n      '[data-test-id=\"ordered-list\"]': {\n        listStyleType: 'lower-roman',\n        '[data-test-id=\"ordered-list\"]': {\n          listStyleType: 'lower-alpha',\n        },\n      },\n    },\n    '[data-test-id=\"paragraph\"]': {\n      margin: 0,\n      lineHeight: tokens.lineHeightDefault,\n    },\n  }),\n  unorderedList: css({\n    margin: '0 0 1.25rem 1.25rem',\n    listStyleType: 'disc',\n    '[data-test-id=\"unordered-list\"]': {\n      listStyleType: 'circle',\n      '[data-test-id=\"unordered-list\"]': {\n        listStyleType: 'square',\n      },\n    },\n    '[data-test-id=\"paragraph\"]': {\n      margin: 0,\n      lineHeight: tokens.lineHeightDefault,\n    },\n  }),\n  listItem: css({\n    listStyle: 'inherit',\n    margin: 0,\n    '[data-test-id=\"ordered-list\"], [data-test-id=\"unordered-list\"]': {\n      margin: `0 0 0 ${tokens.spacingL}`,\n    },\n  }),\n  heading1: css({\n    ...headingCss,\n    fontSize: '1.875rem',\n  }),\n  heading2: css({\n    ...headingCss,\n    fontSize: '1.5625rem',\n  }),\n  heading3: css({\n    ...headingCss,\n    fontSize: '1.375rem',\n  }),\n  heading4: css({\n    ...headingCss,\n    fontSize: '1.25rem',\n  }),\n  heading5: css({\n    ...headingCss,\n    fontSize: '1.125rem',\n  }),\n  heading6: css({\n    ...headingCss,\n    fontSize: '1rem',\n  }),\n};\n\nexport default function (Tag, tagProps = {}) {\n  const CommonNode = ({ attributes, children, node }) => {\n    return (\n      <Tag\n        className={styles[camelCase(node.type)]}\n        data-test-id={node.type}\n        {...tagProps}\n        {...attributes}>\n        {children}\n      </Tag>\n    );\n  };\n\n  CommonNode.displayName = `${Tag}-node`;\n  CommonNode.propTypes = NodePropTypes;\n\n  return CommonNode;\n}\n","import isHotkey from 'is-hotkey';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { applyChange, isSelectionInQuote } from './Util';\nimport commonNode from '../shared/NodeDecorator';\nimport { haveTextInSomeBlocks } from '../shared/UtilHave';\n\nconst newPlugin =\n  (defaultType, tagName, hotkey) =>\n  ({ type = defaultType, richTextAPI: { logShortcutAction } }) => {\n    return {\n      renderNode: (props, _editor, next) => {\n        if (props.node.type === type) {\n          return commonNode(tagName)(props);\n        }\n        return next();\n      },\n      onKeyDown: (e, editor, next) => {\n        if (isHotkey(hotkey, e)) {\n          const isActive = applyChange(editor);\n          const actionName = isActive ? 'insert' : 'remove';\n          logShortcutAction(actionName, { nodeType: type });\n          return;\n        }\n        if (\n          isHotkey('Backspace', e) &&\n          isSelectionInQuote(editor) &&\n          !haveTextInSomeBlocks(editor)\n        ) {\n          editor.unwrapBlock(BLOCKS.QUOTE).delete();\n          return;\n        }\n        return next();\n      },\n    };\n  };\n\nconst QuotePlugin = newPlugin(BLOCKS.QUOTE, 'blockquote', ['mod+shift+1']);\n\nexport default QuotePlugin;\n","import React, { Component } from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport blockToggleDecorator from '../shared/BlockToggleDecorator';\nimport { applyChange, isSelectionInQuote } from './Util';\nimport { QuoteIcon } from '@contentful/f36-icons';\n\nclass Blockquote extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\n// TODO: Currently it seems this is the only place using `blockToggleDecorator` but we still\n//  have to inject a custom `applyChange`. Seems like we could get rid of blockToggleDecorator.\nexport default blockToggleDecorator({\n  type: BLOCKS.QUOTE,\n  title: 'Blockquote',\n  children: <QuoteIcon />,\n  applyChange,\n  isActive: isSelectionInQuote,\n})(Blockquote);\n\nexport { default as QuotePlugin } from './QuotePlugin';\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { EntryCard } from '@contentful/f36-components';\nimport {\n  useEntities,\n  MissingEntityCard,\n  WrappedEntryCard,\n} from '@contentful/field-editor-reference';\n\nexport function FetchingWrappedEntryCard(props) {\n  const { getOrLoadEntry, loadEntityScheduledActions, entries } = useEntities();\n\n  React.useEffect(() => {\n    getOrLoadEntry(props.entryId);\n  }, [props.entryId]);\n\n  const entry = entries[props.entryId];\n\n  React.useEffect(() => {\n    if (entry) {\n      props.onEntityFetchComplete && props.onEntityFetchComplete();\n    }\n  }, [entry]);\n\n  if (entry === 'failed') {\n    return (\n      <MissingEntityCard\n        entityType=\"Entry\"\n        isDisabled={props.isDisabled}\n        onRemove={props.onRemove}\n      />\n    );\n  }\n\n  if (entry === undefined) {\n    return <EntryCard isLoading />;\n  }\n\n  const contentType = props.sdk.space\n    .getCachedContentTypes()\n    .find((contentType) => contentType.sys.id === entry.sys.contentType.sys.id);\n\n  return (\n    <WrappedEntryCard\n      getAsset={props.sdk.space.getAsset}\n      getEntityScheduledActions={loadEntityScheduledActions}\n      entryUrl={props.getEntryUrl && props.getEntryUrl(entry.sys.id)}\n      isSelected={props.isSelected}\n      isDisabled={props.isDisabled}\n      localeCode={props.locale}\n      defaultLocaleCode={props.sdk.locales.default}\n      contentType={contentType}\n      entry={entry}\n      onEdit={props.onEdit}\n      onRemove={props.onRemove}\n      isClickable={false}\n    />\n  );\n}\n\nFetchingWrappedEntryCard.propTypes = {\n  sdk: PropTypes.object.isRequired,\n  entryId: PropTypes.string.isRequired,\n  locale: PropTypes.string.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onRemove: PropTypes.func,\n  onEdit: PropTypes.func,\n  getEntryUrl: PropTypes.func,\n  onEntityFetchComplete: PropTypes.func,\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { AssetCard } from '@contentful/f36-components';\nimport {\n  useEntities,\n  MissingEntityCard,\n  WrappedAssetCard,\n} from '@contentful/field-editor-reference';\n\nexport function FetchingWrappedAssetCard(props) {\n  const { getOrLoadAsset, loadEntityScheduledActions, assets } = useEntities();\n\n  React.useEffect(() => {\n    getOrLoadAsset(props.assetId);\n  }, [props.assetId]);\n\n  const asset = assets[props.assetId];\n\n  React.useEffect(() => {\n    if (asset) {\n      props.onEntityFetchComplete && props.onEntityFetchComplete();\n    }\n  }, [asset]);\n\n  if (asset === 'failed') {\n    return (\n      <MissingEntityCard\n        entityType=\"Asset\"\n        isDisabled={props.isDisabled}\n        onRemove={props.onRemove}\n      />\n    );\n  }\n\n  if (asset === undefined) {\n    return <AssetCard size=\"default\" isLoading title=\"\" src=\"\" href=\"\" />;\n  }\n\n  return (\n    <WrappedAssetCard\n      getAsset={props.sdk.space.getAsset}\n      getEntityScheduledActions={loadEntityScheduledActions}\n      getAssetUrl={props.getAssetUrl}\n      size=\"default\"\n      isSelected={props.isSelected}\n      isDisabled={props.isDisabled}\n      localeCode={props.locale}\n      defaultLocaleCode={props.sdk.locales.default}\n      asset={asset}\n      onEdit={props.onEdit}\n      onRemove={props.onRemove}\n      isClickable={false}\n    />\n  );\n}\n\nFetchingWrappedAssetCard.propTypes = {\n  sdk: PropTypes.object.isRequired,\n  locale: PropTypes.string.isRequired,\n  assetId: PropTypes.string.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onRemove: PropTypes.func,\n  onEdit: PropTypes.func,\n  getAssetUrl: PropTypes.func,\n  onEntityFetchComplete: PropTypes.func,\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport PropTypes from 'prop-types';\nimport tokens from '@contentful/f36-tokens';\nimport { EntityProvider } from '@contentful/field-editor-reference';\nimport { FetchingWrappedEntryCard } from '../../plugins/EmbeddedEntityBlock/FetchingWrappedEntryCard';\nimport { FetchingWrappedAssetCard } from '../../plugins/EmbeddedEntityBlock/FetchingWrappedAssetCard';\n\nimport {\n  TextLink,\n  Button,\n  FormControl,\n  FormLabel,\n  Select,\n  TextInput,\n  Form,\n  ModalContent,\n  ModalControls,\n} from '@contentful/f36-components';\n\nexport const LINK_TYPES = {\n  URI: 'uri',\n  ENTRY: 'Entry',\n  ASSET: 'Asset',\n};\n\nfunction isFeaturingEntitySelector(entitySelectorConfigs = {}) {\n  return !!entitySelectorConfigs.Entry || !!entitySelectorConfigs.Asset;\n}\n\nfunction entityToLink(entity) {\n  const { id, type } = entity.sys;\n  return { sys: { id, type: 'Link', linkType: type } };\n}\n\nexport class HyperlinkDialog extends React.Component {\n  static propTypes = {\n    sdk: PropTypes.object.isRequired,\n    labels: PropTypes.shape({\n      title: PropTypes.string,\n      confirm: PropTypes.string,\n    }),\n    value: PropTypes.shape({\n      text: PropTypes.string,\n      uri: PropTypes.string,\n      target: PropTypes.object,\n      // Will be overwritten accordingly if `uri` or `target.sys.linkType` are set.\n      type: PropTypes.oneOf(['uri', 'Entry', 'Asset']),\n    }),\n    entitySelectorConfigs: PropTypes.object,\n    allowedHyperlinkTypes: PropTypes.arrayOf(\n      PropTypes.oneOf([LINK_TYPES.ENTRY, LINK_TYPES.ASSET, LINK_TYPES.URI])\n    ),\n    hideText: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    labels: {\n      title: 'Insert link',\n      confirm: 'Insert link',\n    },\n    value: {},\n    hideText: false,\n    entitySelectorConfigs: {},\n    allowedHyperlinkTypes: [LINK_TYPES.ENTRY, LINK_TYPES.ASSET, LINK_TYPES.URI],\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { text, type, uri, target } = props.value;\n    const isEntityLink = Boolean(target);\n    const entityLinks = {\n      [LINK_TYPES.ENTRY]: null,\n      [LINK_TYPES.ASSET]: null,\n    };\n    let linkType = type;\n\n    if (isEntityLink) {\n      linkType = target.sys.linkType;\n      entityLinks[linkType] = target;\n    } else if (props.allowedHyperlinkTypes.includes(LINK_TYPES.URI)) {\n      linkType = LINK_TYPES.URI;\n    } else {\n      linkType = props.allowedHyperlinkTypes[0];\n    }\n\n    this.state = { text, uri, entityLinks, type: linkType };\n  }\n\n  setTargetEntity(type, entity) {\n    this.setState((state) => ({\n      entityLinks: {\n        ...state.entityLinks,\n        [type]: entity ? entityToLink(entity) : undefined,\n      },\n    }));\n  }\n\n  getValue() {\n    const { text, type, uri } = this.state;\n    const value = { type };\n    if (text) {\n      value.text = text;\n    }\n    if (type === LINK_TYPES.URI) {\n      value.uri = uri;\n    } else {\n      value.target = this.state.entityLinks[type];\n    }\n    return value;\n  }\n\n  isLinkComplete() {\n    const { text, type, uri, target } = this.getValue();\n    const requiresText = !this.props.hideText;\n    if (requiresText && !text) {\n      return false;\n    }\n    return (type === LINK_TYPES.URI && uri) || target;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onClose(this.getValue());\n  };\n\n  selectEntry = async () => {\n    const { locale, contentTypes } = this.props.entitySelectorConfigs.Entry;\n    const entry = await this.props.sdk.dialogs.selectSingleEntry({ locale, contentTypes });\n    this.setTargetEntity(LINK_TYPES.ENTRY, entry);\n  };\n\n  selectAsset = async () => {\n    const { locale } = this.props.entitySelectorConfigs.Asset;\n    const asset = await this.props.sdk.dialogs.selectSingleAsset({ locale });\n    this.setTargetEntity(LINK_TYPES.ASSET, asset);\n  };\n\n  render() {\n    const { labels } = this.props;\n    return (\n      <EntityProvider sdk={this.props.sdk}>\n        <React.Fragment>\n          <ModalContent>{this.renderFields()}</ModalContent>\n          <ModalControls>\n            <Button\n              type=\"button\"\n              onClick={() => this.props.onClose(null)}\n              variant=\"secondary\"\n              testId=\"cancel-cta\"\n              size=\"small\">\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"positive\"\n              onClick={this.handleSubmit}\n              isDisabled={!this.isLinkComplete()}\n              testId=\"confirm-cta\"\n              size=\"small\">\n              {labels.confirm}\n            </Button>\n          </ModalControls>\n        </React.Fragment>\n      </EntityProvider>\n    );\n  }\n\n  renderFields() {\n    const { hideText, allowedHyperlinkTypes, entitySelectorConfigs } = this.props;\n    const { uri, text, type } = this.state;\n    const isUriInputAutoFocused = type === LINK_TYPES.URI && (hideText || !!text);\n\n    return (\n      <Form>\n        {hideText ? null : (\n          <FormControl id=\"link-text\" isRequired>\n            <FormControl.Label>Link text</FormControl.Label>\n            <TextInput\n              testId=\"link-text-input\"\n              name=\"link-text\"\n              value={text || ''}\n              onChange={(e) => this.setState({ text: e.target.value })}\n              // eslint-disable-next-line jsx-a11y/no-autofocus\n              autoFocus={!isUriInputAutoFocused}\n            />\n          </FormControl>\n        )}\n        {isFeaturingEntitySelector(entitySelectorConfigs) && (\n          <FormControl id=\"link-type\" name=\"link-type\">\n            <FormControl.Label>Link type</FormControl.Label>\n            <Select\n              value={type}\n              onChange={(e) => this.setState({ type: e.target.value })}\n              testId=\"link-type-select\">\n              {/* Show the option if the link type is allowed or the current link is of type that is no longer valid */}\n              {allowedHyperlinkTypes.includes(LINK_TYPES.URI) || type === LINK_TYPES.URI ? (\n                <Select.Option value={LINK_TYPES.URI}>URL</Select.Option>\n              ) : null}\n              {allowedHyperlinkTypes.includes(LINK_TYPES.ENTRY) || type === LINK_TYPES.ENTRY ? (\n                <Select.Option value={LINK_TYPES.ENTRY}>Entry</Select.Option>\n              ) : null}\n              {allowedHyperlinkTypes.includes(LINK_TYPES.ASSET) || type === LINK_TYPES.ASSET ? (\n                <Select.Option value={LINK_TYPES.ASSET}>Asset</Select.Option>\n              ) : null}\n            </Select>\n          </FormControl>\n        )}\n        {type === LINK_TYPES.URI ? (\n          <FormControl id=\"link-uri\" isRequired>\n            <FormControl.Label>Link target</FormControl.Label>\n            <TextInput\n              testId=\"link-uri-input\"\n              name=\"link-uri\"\n              value={uri || ''}\n              placeholder=\"https://\"\n              onChange={(e) => this.setState({ uri: e.target.value })}\n              // eslint-disable-next-line jsx-a11y/no-autofocus\n              autoFocus={isUriInputAutoFocused}\n            />\n            <FormControl.HelpText>A protocol may be required, e.g. https://</FormControl.HelpText>\n          </FormControl>\n        ) : (\n          this.renderEntityField()\n        )}\n      </Form>\n    );\n  }\n\n  renderEntityField() {\n    const { type, entityLinks } = this.state;\n    const resetEntity = () => this.setTargetEntity(type, null);\n    const entityLink = entityLinks[type];\n    const isEntitySelectorVisible = !entityLink;\n    return (\n      <div>\n        <FormLabel required htmlFor=\"\">\n          Link target\n        </FormLabel>\n        {!isEntitySelectorVisible && (\n          <TextLink\n            as=\"button\"\n            className={css({ marginLeft: tokens.spacingS })}\n            onClick={resetEntity}>\n            Remove selection\n          </TextLink>\n        )}\n        {entityLink && (\n          <div>\n            {type === LINK_TYPES.ENTRY && (\n              <FetchingWrappedEntryCard\n                sdk={this.props.sdk}\n                locale={this.props.entitySelectorConfigs.Entry.locale}\n                entryId={entityLink.sys.id}\n                isDisabled\n                isSelected={false}\n              />\n            )}\n            {type == LINK_TYPES.ASSET && (\n              <FetchingWrappedAssetCard\n                sdk={this.props.sdk}\n                locale={this.props.entitySelectorConfigs.Asset.locale}\n                assetId={entityLink.sys.id}\n                isDisabled\n                isSelected={false}\n              />\n            )}\n          </div>\n        )}\n        {/* Keep all entity selectors in the DOM for super fast types switching ux.*/}\n        {isEntitySelectorVisible && this.renderEntitySelector(type, isEntitySelectorVisible)}\n      </div>\n    );\n  }\n\n  renderEntitySelector(type) {\n    return (\n      <div className={css({ marginTop: tokens.spacingS })}>\n        {type === LINK_TYPES.ENTRY && (\n          <TextLink as=\"button\" onClick={this.selectEntry}>\n            Select entry\n          </TextLink>\n        )}\n        {type === LINK_TYPES.ASSET && (\n          <TextLink as=\"button\" onClick={this.selectAsset}>\n            Select asset\n          </TextLink>\n        )}\n      </div>\n    );\n  }\n}\n\nexport const openHyperlinkDialog = (\n  dialogs,\n  { value, showTextInput, allowedHyperlinkTypes, entitySelectorConfigs }\n) => {\n  const isNew = !(value.uri || value.target);\n  const props = {\n    labels: {\n      title: isNew ? 'Insert hyperlink' : 'Edit hyperlink',\n      confirm: isNew ? 'Insert' : 'Update',\n    },\n    value,\n    hideText: !showTextInput,\n    allowedHyperlinkTypes,\n    entitySelectorConfigs,\n  };\n\n  return dialogs.openCurrent({\n    title: props.labels.title,\n    width: 'large',\n    shouldCloseOnEscapePress: true,\n    shouldCloseOnOverlayClick: true,\n    allowHeightOverflow: true,\n    parameters: {\n      type: 'rich-text-hyperlink-dialog',\n      ...props,\n    },\n  });\n};\n","/* eslint-disable you-dont-need-lodash-underscore/find */\nimport flow from 'lodash/flow';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\n\n/**\n * Given a field object and a rich text node type, return a list of valid\n * content type IDs associated with the node type, based on that node type's\n * `linkContentType` validation.\n *\n * If there is no such validation or the validation is empty, return an empty\n * array.\n *\n * The navigation here is explained by the `nodes` validation having signature:\n * { nodes: { [nodeType]: validationObject[] } }\n *\n * We defensively navigate through this object because\n * 1) the field may not have a `validations` array,\n * 2) the `validations` array may be empty,\n * 3) the `validations` array may not have a `nodes` validation,\n * 4) the `nodes` validation may not validate the `nodeType`, and\n * 5) the `nodeType` validations may not have a `linkContentType` validation.\n *\n * Note that passing an empty array will result in all possible content types\n * being whitelisted.\n *\n * @param {object} field\n * @param {string} nodeType\n * @returns {string[]}\n */\nexport default (field, nodeType) =>\n  flow(\n    (v) => find(v, 'nodes'),\n    (v) => get(v, ['nodes', nodeType]),\n    (v) => find(v, 'linkContentType'),\n    (v) => get(v, 'linkContentType', [])\n  )(field.validations);\n","import getLinkedContentTypeIdsForNodeType from './getLinkedContentTypeIdsForNodeType';\n\n/**\n * Returns a config for the entity selector based on a given rich text field and a\n * rich text node type that the entity should be picked for. Takes the field\n * validations for the given node type into account.\n *\n * @param {object} field\n * @param {string} nodeType\n * @returns {object}\n */\nexport default function newEntitySelectorConfigFromRichTextField(field, nodeType) {\n  return {\n    entityType: getEntityTypeFromRichTextNode(nodeType),\n    locale: field.locale || null, // Will fall back to default locale.\n    contentTypes: getLinkedContentTypeIdsForNodeType(field, nodeType),\n  };\n}\n\nfunction getEntityTypeFromRichTextNode(nodeType) {\n  const words = nodeType.split('-');\n  if (words.indexOf('entry') !== -1) {\n    return 'Entry';\n  }\n  if (words.indexOf('asset') !== -1) {\n    return 'Asset';\n  }\n  throw new Error(`RichText node type \\`${nodeType}\\` has no associated \\`entityType\\``);\n}\n","/* eslint-disable you-dont-need-lodash-underscore/find */\nimport find from 'lodash/find';\nimport flow from 'lodash/flow';\nimport get from 'lodash/get';\nimport { BLOCKS, INLINES, TOP_LEVEL_BLOCKS } from '@contentful/rich-text-types';\n\n// TODO: Move this into separate package (maybe rich-text-types) and share with FE.\nexport const VALIDATIONS = {\n  ENABLED_MARKS: 'enabledMarks',\n  ENABLED_NODE_TYPES: 'enabledNodeTypes',\n};\n\nexport const VALIDATABLE_NODE_TYPES = [\n  ...TOP_LEVEL_BLOCKS.filter((type) => type !== BLOCKS.PARAGRAPH),\n  ...Object.values(INLINES),\n];\n\nconst getRichTextValidation = (field, validationType) =>\n  flow(\n    (v) => find(v, validationType),\n    (v) => get(v, validationType)\n  )(field.validations);\n\nconst isFormattingOptionEnabled = (field, validationType, nodeTypeOrMark) => {\n  const enabledFormattings = getRichTextValidation(field, validationType);\n\n  if (enabledFormattings === undefined) {\n    return true;\n  }\n\n  return enabledFormattings.includes(nodeTypeOrMark);\n};\n\n/**\n * Checks if nodeType is enabled in the Rich Text Editor Field\n *\n * @param {FieldInfo} field\n * @param {string} nodeType\n * @returns {boolean}\n */\nexport const isNodeTypeEnabled = (field, nodeType) =>\n  isFormattingOptionEnabled(field, VALIDATIONS.ENABLED_NODE_TYPES, nodeType);\n\n/**\n * Checks if mark is enabled in the Rich Text Editor Field\n *\n * @param {FieldInfo} field\n * @param {string} mark\n * @returns {boolean}\n */\nexport const isMarkEnabled = (field, mark) =>\n  isFormattingOptionEnabled(field, VALIDATIONS.ENABLED_MARKS, mark);\n","import { BLOCKS, INLINES } from '@contentful/rich-text-types';\nimport { haveInlines } from '../shared/UtilHave';\nimport { openHyperlinkDialog, LINK_TYPES } from '../../dialogs/HypelinkDialog/HyperlinkDialog';\nimport newEntitySelectorConfigFromRichTextField from '../../helpers/newEntitySelectorConfigFromRichTextField';\nimport { isNodeTypeEnabled } from '../../validations/index';\n\nconst { HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK } = INLINES;\nconst HYPERLINK_TYPES = [HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK];\n\nconst nodeToHyperlinkType = {\n  [INLINES.ENTRY_HYPERLINK]: LINK_TYPES.ENTRY,\n  [INLINES.ASSET_HYPERLINK]: LINK_TYPES.ASSET,\n  [INLINES.HYPERLINK]: LINK_TYPES.URI,\n};\n\nfunction getAllowedHyperlinkTypes(field) {\n  const hyperlinkTypes = [INLINES.ENTRY_HYPERLINK, INLINES.ASSET_HYPERLINK, INLINES.HYPERLINK];\n  if (field.type === 'RichText') {\n    return hyperlinkTypes\n      .filter((nodeType) => isNodeTypeEnabled(field, nodeType))\n      .map((nodeType) => nodeToHyperlinkType[nodeType]);\n  }\n\n  return hyperlinkTypes.map((nodeType) => nodeToHyperlinkType[nodeType]);\n}\n\nfunction getEntitySelectorConfigs(field) {\n  const config = {};\n\n  // TODO: Don't pass specific key if CT validation prohibits its type:\n  if (isNodeTypeEnabled(field, INLINES.ENTRY_HYPERLINK)) {\n    config.Entry = newEntitySelectorConfigFromRichTextField(field, 'entry-hyperlink');\n  }\n  if (isNodeTypeEnabled(field, INLINES.ASSET_HYPERLINK)) {\n    config.Asset = newEntitySelectorConfigFromRichTextField(field, 'asset-hyperlink');\n  }\n\n  return config;\n}\n\n/**\n * Returns whether or not the current value selection would allow for a user\n * edit on a hyperlink.\n *\n * @param {slate.Value} value\n * @returns {boolean}\n */\nexport function mayEditLink(value) {\n  return !value.isExpanded && hasHyperlink(value);\n}\n\n/**\n * Returns whether the given value has any hyperlink node.\n *\n * @param {slate.Value} value\n * @returns {boolean}\n */\nexport function hasHyperlink(value) {\n  return HYPERLINK_TYPES.some((type) => haveInlines({ value }, type));\n}\n\n/**\n * Returns whether the given value has any inline node other than hyperlinks.\n *\n * @param {slate.Value} value\n * @returns {boolean}\n */\nexport function hasOnlyHyperlinkInlines(value) {\n  return value.inlines.every((inline) => HYPERLINK_TYPES.includes(inline.type));\n}\n\n/**\n * Allows the user to insert/remove a link depending on whether the current\n * selection has a link or not. If there is no link, a dialog is shown for\n * the user.\n *\n * @param {slate.Editor} editor Will be mutated with the required operations.\n * @param {Object} sdk\n * @param {function} logAction\n * @returns {Promise<void>}\n */\nexport async function toggleLink(editor, sdk, logAction) {\n  if (hasHyperlink(editor.value)) {\n    removeLinks(editor, logAction);\n  } else {\n    await insertLink(editor, sdk, logAction);\n  }\n}\n\nasync function insertLink(change, sdk, logAction) {\n  change.blur(); // Ensures modal input auto-focus will work.\n\n  logAction('openCreateHyperlinkDialog');\n  const showTextInput = !change.value.isExpanded || change.value.fragment.text.trim() === '';\n\n  const result = await openHyperlinkDialog(sdk.dialogs, {\n    showTextInput,\n    value: { text: change.value.fragment.text || '' },\n    allowedHyperlinkTypes: getAllowedHyperlinkTypes(sdk.field),\n    entitySelectorConfigs: getEntitySelectorConfigs(sdk.field),\n  });\n\n  if (!result) {\n    logAction('cancelCreateHyperlinkDialog');\n    change.focus();\n    return;\n  }\n  const { text, type: linkType, uri, target } = result;\n  if (showTextInput) {\n    if (change.isVoid(change.value.blocks.last())) {\n      change.insertBlock(BLOCKS.PARAGRAPH);\n    }\n    change.insertText(text).moveFocusForward(0 - text.length);\n  }\n  const data = target ? { target } : { uri };\n  change.call(wrapLink, linkType, data);\n  const nodeType = linkTypeToNodeType(linkType);\n  logAction('insert', { nodeType, linkType });\n\n  change.focus();\n}\n\nfunction removeLinks(change, logAction) {\n  HYPERLINK_TYPES.forEach((type) => change.unwrapInline(type));\n  change.focus();\n  logAction('unlinkHyperlinks');\n}\n\n/**\n * Allows the user to edit the first selected link of a given Change by showing\n * a dialog and applying the change.\n *\n * @param {slate.Editor} change Will be mutated with the required operations.\n * @param {Object} sdk\n * @param {function} logAction\n * @returns {Promise<void>}\n */\nexport async function editLink(change, sdk, logAction) {\n  const link = change.value.inlines.get(0);\n  if (!link) {\n    throw new Error('Change object contains no link to be edited.');\n  }\n  change.blur(); // Ensures modal input auto-focus will work.\n  logAction('openEditHyperlinkDialog');\n  const { uri: oldUri, target: oldTarget } = link.data.toJSON();\n  const result = await openHyperlinkDialog(sdk.dialogs, {\n    showTextInput: false,\n    value: oldTarget ? { target: oldTarget } : { uri: oldUri },\n    allowedHyperlinkTypes: getAllowedHyperlinkTypes(sdk.field),\n    entitySelectorConfigs: getEntitySelectorConfigs(sdk.field),\n  });\n  if (!result) {\n    logAction('cancelEditHyperlinkDialog');\n    change.focus();\n    return;\n  }\n\n  const { type: linkType, uri, target } = result;\n  const nodeType = linkTypeToNodeType(linkType);\n  const data = target ? { target } : { uri };\n  change.setInlines({ type: nodeType, data });\n  logAction('edit', { nodeType, linkType });\n  change.focus();\n}\n\nfunction wrapLink(change, linkType, data) {\n  change.wrapInline({\n    type: linkTypeToNodeType(linkType),\n    data,\n  });\n  change.moveToEnd();\n}\n\nfunction linkTypeToNodeType(linkType) {\n  switch (linkType) {\n    case 'Entry':\n      return ENTRY_HYPERLINK;\n    case 'Asset':\n      return ASSET_HYPERLINK;\n  }\n  return HYPERLINK;\n}\n","import React, { Component } from 'react';\nimport { INLINES } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\nimport { hasHyperlink, toggleLink, hasOnlyHyperlinkInlines } from './Util';\nimport { LinkIcon } from '@contentful/f36-icons';\n\nexport default class HyperlinkToolbarIcon extends Component {\n  static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n  handleClick = toolbarActionHandlerWithSafeAutoFocus(this, async () => {\n    const {\n      onToggle,\n      editor,\n      richTextAPI: { sdk, logToolbarAction },\n    } = this.props;\n    await toggleLink(editor, sdk, logToolbarAction);\n    onToggle(editor);\n  });\n\n  render() {\n    const { disabled, editor } = this.props;\n    const isDisabled = disabled || !hasOnlyHyperlinkInlines(editor.value);\n    return (\n      <ToolbarIcon\n        disabled={isDisabled}\n        type={INLINES.HYPERLINK}\n        title=\"Hyperlink\"\n        onToggle={this.handleClick}\n        isActive={hasHyperlink(editor.value)}>\n        <LinkIcon />\n      </ToolbarIcon>\n    );\n  }\n}\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const hyperlinkTooltipStyles = {\n  entityContentType: css({\n    color: tokens.gray500,\n    marginRight: tokens.spacingXs,\n    '&:after': {\n      content: '\"\"',\n    },\n  }),\n  entityTitle: css({\n    marginRight: tokens.spacingXs,\n  }),\n  separator: css({\n    background: tokens.gray700,\n    margin: tokens.spacingXs,\n  }),\n};\n\nexport default {\n  hyperlinkWrapper: css({\n    display: 'inline',\n    position: 'static',\n    a: {\n      fontSize: 'inherit !important',\n    },\n  }),\n  hyperlink: css({\n    fontSize: 'inherit !important',\n    display: 'inline !important',\n    '&:hover': {\n      fill: tokens.textColorDark,\n    },\n    '&:focus': {\n      fill: tokens.textColorDark,\n    },\n  }),\n  hyperlinkIEFallback: css({\n    color: '#1683d0',\n    textDecoration: 'underline',\n  }),\n  // TODO: use these styles once we can use the icon\n  hyperlinkIcon: css({\n    position: 'relative',\n    top: '4px',\n    height: '14px',\n    margin: '0 -2px 0 -1px',\n    webkitTransition: 'fill 100ms ease-in-out',\n    transition: 'fill 100ms ease-in-out',\n    '&:hover': {\n      fill: tokens.textColorDark,\n    },\n    '&:focus': {\n      fill: tokens.textColorDark,\n    },\n  }),\n};\n","import { detect as detectBrowser } from 'detect-browser';\n\nconst browser = detectBrowser();\nconst isEdge = !!browser && browser.name === 'ie';\n\n// TODO: Test whether this is still relevant with latest Edge or at least do\n//  so after upgrading Slate.js to see if still relevant at all.\nexport const SUPPORTS_NATIVE_SLATE_HYPERLINKS = !isEdge;\n","import React from 'react';\nimport { entityHelpers } from '@contentful/field-editor-shared';\n\nasync function fetchAllData({ sdk, entityId, entityType, localeCode, defaultLocaleCode }) {\n  let contentType;\n\n  const getEntity = entityType === 'Entry' ? sdk.space.getEntry : sdk.space.getAsset;\n  const entity = await getEntity(entityId);\n  if (entity.sys.contentType) {\n    const contentTypeId = entity.sys.contentType.sys.id;\n    contentType = sdk.space.getCachedContentTypes().find((ct) => ct.sys.id === contentTypeId);\n  }\n\n  const entityTitle =\n    entityType === 'Entry'\n      ? entityHelpers.getEntryTitle({\n          entry: entity,\n          contentType,\n          localeCode,\n          defaultLocaleCode,\n          defaultTitle: 'Untitled',\n        })\n      : entityHelpers.getAssetTitle({\n          asset: entity,\n          localeCode,\n          defaultLocaleCode,\n          defaultTitle: 'Untitled',\n        });\n\n  const entityDescription = entityHelpers.getEntityDescription({\n    entity,\n    contentType,\n    localeCode,\n    defaultLocaleCode,\n  });\n\n  const jobs = await sdk.space.getEntityScheduledActions(entityType, entityId);\n\n  const entityStatus = entityHelpers.getEntryStatus(entity.sys);\n\n  return {\n    jobs,\n    entity,\n    entityTitle,\n    entityDescription,\n    entityStatus,\n    contentTypeName: contentType ? contentType.name : '',\n  };\n}\n\nexport function useRequestStatus({ richTextAPI, target }) {\n  const { sdk } = richTextAPI;\n\n  const [requestStatus, setRequestStatus] = React.useState({ type: 'loading' });\n\n  React.useEffect(() => {\n    if (target) {\n      fetchAllData({\n        sdk,\n        entityId: target?.sys?.id,\n        entityType: target?.sys?.linkType,\n        localeCode: sdk.field.locale,\n        defaultLocaleCode: sdk.locales.default,\n      })\n        .then((entityInfo) => {\n          setRequestStatus({ type: 'success', data: entityInfo });\n        })\n        .catch((e) => {\n          console.log(e);\n          setRequestStatus({ type: 'error', error: e });\n        });\n    }\n  }, [target]); // eslint-disable-line\n\n  return requestStatus;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cx } from 'emotion';\nimport isHotKey from 'is-hotkey';\nimport styles from './styles';\nimport { SUPPORTS_NATIVE_SLATE_HYPERLINKS } from '../../helpers/browserSupport';\nimport { useRequestStatus } from './useRequestStatus';\nimport { getScheduleTooltipContent } from '@contentful/field-editor-reference';\nimport { truncate } from './truncate';\n\nimport { TextLink, Tooltip } from '@contentful/f36-components';\n\nfunction isUrl(string) {\n  return /^(?:[a-z]+:)?\\/\\//i.test(string) || /^mailto:/i.test(string);\n}\n\n// eslint-disable-next-line react/prop-types\nfunction getEntityInfo({ entityTitle, entityStatus, contentTypeName }) {\n  const title = truncate(entityTitle, 60) || 'Untitled';\n\n  return `${contentTypeName || 'Asset'} \"${title}\", ${entityStatus}`;\n}\n\nexport default function Hyperlink(props) {\n  const { children, node } = props;\n  const title = node.data.get('title');\n  const uri = node.data.get('uri');\n  const href = isUrl(uri) ? uri : 'javascript:void(0)';\n  const target = node.data.get('target');\n  const requestStatus = useRequestStatus({ richTextAPI: props.richTextAPI, target });\n\n  const getTooltipContent = () => {\n    if (requestStatus.type === 'loading') {\n      return `Loading ${target.sys.linkType.toLowerCase()}...`;\n    }\n    let tooltipContent = '';\n    if (requestStatus.type === 'error') {\n      tooltipContent = `${target.sys.linkType} missing or inaccessible`;\n    } else {\n      const { jobs, ...entityInfo } = requestStatus.data;\n      tooltipContent = `${getEntityInfo(entityInfo)}\n    ${jobs.length > 0 ? getScheduleTooltipContent({ job: jobs[0], jobsCount: jobs.length }) : ''}`;\n    }\n    return tooltipContent;\n  };\n\n  const onKeyDown = (e) => {\n    if (isHotKey('enter', e)) {\n      e.preventDefault();\n      e.stopPropagation(); // Ensure Slate doesn't interpret as new paragraph.\n      props.onEdit(e);\n    }\n  };\n\n  const renderLink = ({ tooltipContent }) => {\n    return (\n      <Tooltip\n        content={tooltipContent}\n        className={styles.tooltipContainer}\n        targetWrapperClassName={styles.hyperlinkWrapper}\n        placement=\"bottom\"\n        maxWidth=\"auto\">\n        {SUPPORTS_NATIVE_SLATE_HYPERLINKS ? (\n          <TextLink\n            // Allows user to open uri link in new tab.\n            href={href}\n            rel=\"noopener noreferrer\"\n            title={title}\n            className={styles.hyperlink}>\n            {children}\n          </TextLink>\n        ) : (\n          <span className={cx(styles.hyperlink, styles.hyperlinkIEFallback)}>{children}</span>\n        )}\n      </Tooltip>\n    );\n  };\n\n  return (\n    <span\n      {...props.attributes}\n      onClick={props.onEdit}\n      onKeyDown={(e) => onKeyDown(e)}\n      role=\"button\"\n      tabIndex={0}>\n      {target\n        ? renderLink({ tooltipContent: getTooltipContent() })\n        : renderLink({ tooltipContent: uri })}\n    </span>\n    // TODO: Add contentEditable={false} to tooltip to fix text cursor bug\n  );\n}\n\nHyperlink.propTypes = {\n  attributes: PropTypes.object.isRequired,\n  node: PropTypes.object.isRequired,\n  children: PropTypes.node,\n  editor: PropTypes.object,\n  richTextAPI: PropTypes.object.isRequired,\n  onEdit: PropTypes.func,\n};\n","export function truncate(str, length) {\n  if (str && str.length > length) {\n    return (\n      str &&\n      str\n        .substr(0, length + 1) // +1 to look ahead and be replaced below.\n        // Get rid of orphan letters but not one letter words (I, a, 2).\n        // Try to not have “.” as last character to avoid awkward “....”.\n        .replace(/(\\s+\\S(?=\\S)|\\s*)\\.?.$/, '…')\n    );\n  } else {\n    return str;\n  }\n}\n","import React from 'react';\nimport isHotkey from 'is-hotkey';\nimport { INLINES } from '@contentful/rich-text-types';\nimport ToolbarIcon from './ToolbarIcon';\nimport Hyperlink from './Hyperlink';\nimport { editLink, mayEditLink, toggleLink, hasOnlyHyperlinkInlines } from './Util';\n\nconst { HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK } = INLINES;\n\nexport default ToolbarIcon;\n\nexport const HyperlinkPlugin = ({ richTextAPI }) => ({\n  renderNode: (props, _editor, next) => {\n    const { sdk, logViewportAction } = richTextAPI;\n    const { node, editor } = props;\n    if (isHyperlink(node.type)) {\n      return (\n        <Hyperlink\n          {...props}\n          richTextAPI={richTextAPI}\n          onEdit={(event) => {\n            event.preventDefault(); // Don't follow `href`\n\n            editor.moveToRangeOfNode(node).focus();\n            if (mayEditLink(editor.value)) {\n              editLink(editor, sdk, logViewportAction);\n            }\n          }}\n        />\n      );\n    }\n    return next();\n  },\n  onKeyDown: (event, editor, next) => {\n    const { sdk, logShortcutAction } = richTextAPI;\n    const hotkey = ['mod+k'];\n\n    if (isHotkey(hotkey, event) && hasOnlyHyperlinkInlines(editor.value)) {\n      if (mayEditLink(editor.value)) {\n        editLink(editor, sdk, logShortcutAction);\n      } else {\n        toggleLink(editor, sdk, logShortcutAction);\n      }\n      return;\n    }\n\n    return next();\n  },\n  normalizeNode: (node, editor, next) => {\n    if (isHyperlink(node.type)) {\n      if (node.text.trim() === '') {\n        return () => {\n          editor.removeNodeByKey(node.key);\n        };\n      }\n      if (node.getInlines().size > 0) {\n        return () => {\n          node\n            .getInlines()\n            .forEach((inlineNode) => editor.unwrapInlineByKey(inlineNode.key, node.type));\n        };\n      }\n    }\n    next();\n  },\n});\n\nfunction isHyperlink(type) {\n  return [HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK].includes(type);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu } from '@contentful/f36-components';\nimport { css, cx } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nconst styles = {\n  root: css({\n    fontWeight: tokens.fontWeightDemiBold,\n    lineHeight: 1.5,\n  }),\n  h1: css({\n    fontSize: '1.625rem',\n  }),\n  h2: css({\n    fontSize: '1.4375rem',\n  }),\n  h3: css({\n    fontSize: '1.25rem',\n  }),\n  h4: css({\n    fontSize: '1.125rem',\n  }),\n  h5: css({\n    fontSize: '1rem',\n  }),\n  h6: css({\n    fontSize: '0.875rem',\n  }),\n};\n\n// Necessary because we can't use kebab-case for style identifiers.\nconst getStyleForType = (type) => type.replace('heading-', 'h');\n\nexport default class ToolbarDropdownListItem extends Component {\n  static propTypes = {\n    isActive: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  handleClick = (event) => {\n    /*\n      We're using the mousedown event rather than onclick because onclick will\n      steal the focus.\n    */\n\n    event.preventDefault();\n    this.props.onToggle(event);\n  };\n\n  render() {\n    const { isActive, title, type, children } = this.props;\n    return (\n      <Menu.Item\n        label={title}\n        isInitiallyFocused={isActive}\n        data-test-id={`toolbar-toggle-${type}`}\n        className={cx(styles.root, styles[getStyleForType(type)])}\n        onClick={this.handleClick}>\n        {children}\n      </Menu.Item>\n    );\n  }\n}\n","import * as React from 'react';\nimport { haveBlocks } from './UtilHave';\nimport { toolbarActionHandlerWithSafeAutoFocus } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from './PluginApi';\n\nexport default ({\n    type,\n    title,\n    children,\n    applyChange = (editor, type) => editor.setBlocks(type),\n  }) =>\n  (Block) => {\n    return class BlockSelectDecorator extends React.Component {\n      static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n      handleSelect = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n        const {\n          editor,\n          onToggle,\n          richTextAPI: { logToolbarAction },\n        } = this.props;\n        applyChange(editor, type);\n        onToggle(editor);\n        logToolbarAction('insert', { nodeType: type });\n      });\n\n      render() {\n        const { editor, disabled } = this.props;\n\n        return (\n          <Block\n            type={type}\n            title={title}\n            onToggle={this.handleSelect}\n            isActive={haveBlocks(editor, type)}\n            disabled={disabled}>\n            {children}\n          </Block>\n        );\n      }\n    };\n  };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nimport { Button, Menu } from '@contentful/f36-components';\n\nimport { ChevronDownIcon } from '@contentful/f36-icons';\n\nconst styles = {\n  root: css({\n    padding: 0,\n    marginRight: tokens.spacing2Xs,\n    width: '110px',\n\n    [`@media (min-width: ${tokens.contentWidthDefault})`]: {\n      width: '145px',\n    },\n  }),\n};\n\nexport const blockTitles = {\n  [BLOCKS.HEADING_1]: 'Heading 1',\n  [BLOCKS.HEADING_2]: 'Heading 2',\n  [BLOCKS.HEADING_3]: 'Heading 3',\n  [BLOCKS.HEADING_4]: 'Heading 4',\n  [BLOCKS.HEADING_5]: 'Heading 5',\n  [BLOCKS.HEADING_6]: 'Heading 6',\n  [BLOCKS.PARAGRAPH]: 'Normal Text',\n  [BLOCKS.EMBEDDED_ENTRY]: 'Embedded Entry',\n  [BLOCKS.EMBEDDED_ASSET]: 'Embedded Asset',\n};\n\nclass HeadingDropdown extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    isOpen: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpen: PropTypes.func,\n    currentBlockType: PropTypes.string,\n  };\n  getStyleNameForChange = () => {\n    return blockTitles[this.props.currentBlockType] || blockTitles[BLOCKS.PARAGRAPH];\n  };\n\n  render() {\n    const { onOpen, isOpen, onClose, children } = this.props;\n    return (\n      <Menu isOpen={isOpen} onClose={onClose} onOpen={onOpen}>\n        <Menu.Trigger>\n          <Button\n            endIcon={<ChevronDownIcon />}\n            data-test-id=\"toolbar-heading-toggle\"\n            className={styles.root}\n            variant=\"transparent\"\n            size=\"small\"\n            isDisabled={this.props.disabled}>\n            {this.getStyleNameForChange()}\n          </Button>\n        </Menu.Trigger>\n        <Menu.List className=\"toolbar-heading-dropdown-list\">{children}</Menu.List>\n      </Menu>\n    );\n  }\n}\n\nexport default HeadingDropdown;\n","import React, { Component } from 'react';\nimport ToolbarDropdownListItem from '../shared/ToolbarDropdownListItem';\nimport blockSelectDecorator from '../shared/BlockSelectDecorator';\nimport { blockTitles } from './HeadingDropdown';\n\nexport default function newHeadingDropdownItem(nodeType) {\n  const title = blockTitles[nodeType];\n\n  class Heading extends Component {\n    static displayName = title.replace(/\\s/g, '');\n    render() {\n      return (\n        <ToolbarDropdownListItem {...this.props} data-test-id={nodeType}>\n          {title}\n        </ToolbarDropdownListItem>\n      );\n    }\n  }\n\n  return blockSelectDecorator({\n    type: nodeType,\n    title,\n  })(Heading);\n}\n","import React, { Component } from 'react';\nimport ToolbarDropdownListItem from '../shared/ToolbarDropdownListItem';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport blockSelectDecorator from '../shared/BlockSelectDecorator';\nimport { blockTitles } from './HeadingDropdown';\n\nclass Paragraph extends Component {\n  render() {\n    return (\n      <ToolbarDropdownListItem {...this.props}>\n        {blockTitles[BLOCKS.PARAGRAPH]}\n      </ToolbarDropdownListItem>\n    );\n  }\n}\n\nexport default blockSelectDecorator({\n  type: BLOCKS.PARAGRAPH,\n  title: blockTitles[BLOCKS.PARAGRAPH],\n  shouldToggle: false,\n})(Paragraph);\n","import isHotkey from 'is-hotkey';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { toggleChange } from '../shared/BlockToggleDecorator';\nimport CommonNode from '../shared/NodeDecorator';\nimport newHeadingDropdownItem from './HeadingDropdownItem';\n\nconst newPlugin =\n  (defaultType, tagName, hotkey) =>\n  ({ type = defaultType, richTextAPI }) => ({\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === type) {\n        return CommonNode(tagName, {})(props);\n      }\n      return next();\n    },\n    onKeyDown: (e, editor, next) => {\n      if (isHotkey('enter', e)) {\n        const currentBlock = editor.value.blocks.get(0);\n        if (currentBlock.type === type) {\n          const { value } = editor;\n\n          if (value.selection.start.offset === 0) {\n            const initialRange = value.selection;\n            editor.splitBlock().setBlocksAtRange(initialRange, BLOCKS.PARAGRAPH);\n          } else {\n            editor.splitBlock().setBlocks(BLOCKS.PARAGRAPH);\n          }\n\n          return;\n        }\n      } else if (isHotkey(hotkey, e)) {\n        const isActive = toggleChange(editor, type);\n        const actionName = isActive ? 'insert' : 'remove';\n        richTextAPI.logShortcutAction(actionName, { nodeType: type });\n        return;\n      }\n      return next();\n    },\n  });\n\n// TODO: move hotkeys to components\nexport const Heading1Plugin = newPlugin(BLOCKS.HEADING_1, 'h1', ['mod+opt+1']);\nexport const Heading2Plugin = newPlugin(BLOCKS.HEADING_2, 'h2', ['mod+opt+2']);\nexport const Heading3Plugin = newPlugin(BLOCKS.HEADING_3, 'h3', ['mod+opt+3']);\nexport const Heading4Plugin = newPlugin(BLOCKS.HEADING_4, 'h4', ['mod+opt+4']);\nexport const Heading5Plugin = newPlugin(BLOCKS.HEADING_5, 'h5', ['mod+opt+5']);\nexport const Heading6Plugin = newPlugin(BLOCKS.HEADING_6, 'h6', ['mod+opt+6']);\n\nexport const Heading1 = newHeadingDropdownItem(BLOCKS.HEADING_1);\nexport const Heading2 = newHeadingDropdownItem(BLOCKS.HEADING_2);\nexport const Heading3 = newHeadingDropdownItem(BLOCKS.HEADING_3);\nexport const Heading4 = newHeadingDropdownItem(BLOCKS.HEADING_4);\nexport const Heading5 = newHeadingDropdownItem(BLOCKS.HEADING_5);\nexport const Heading6 = newHeadingDropdownItem(BLOCKS.HEADING_6);\nexport { default as Paragraph } from './Paragraph';\nexport { default as HeadingDropdown } from './HeadingDropdown';\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { haveTextInSomeBlocks } from '../shared/UtilHave';\nimport newEntitySelectorConfigFromRichTextField from '../../helpers/newEntitySelectorConfigFromRichTextField';\n\n/**\n * Returns whether given value has a block of the given type.\n * @param {slate.Editor} editor\n * @param {string} type\n * @returns {boolean}\n */\nexport const hasBlockOfType = (editor, type) => {\n  const blocks = editor.value.blocks;\n  return blocks.get(0).type === type;\n};\n\n/**\n * Invokes entity selector modal and inserts block embed.\n * @param {string} nodeType\n * @param {import('@contentful/field-editor-reference/dist/types').FieldExtensionSDK} sdk\n * @param {slate.Editor} editor\n * @param {function} logAction\n */\nexport async function selectEntityAndInsert(nodeType, sdk, editor, logAction) {\n  logAction('openCreateEmbedDialog', { nodeType });\n\n  const { field, dialogs } = sdk;\n  const baseConfig = newEntitySelectorConfigFromRichTextField(field, nodeType);\n  const selectEntity =\n    baseConfig.entityType === 'Asset' ? dialogs.selectSingleAsset : dialogs.selectSingleEntry;\n  const config = { ...baseConfig, withCreate: true };\n  try {\n    const entity = await selectEntity(config);\n    if (!entity) {\n      return;\n    }\n    insertBlock(editor, nodeType, entity);\n    logAction('insert', { nodeType });\n  } catch (error) {\n    if (error) {\n      throw error;\n    } else {\n      logAction('cancelCreateEmbedDialog', { nodeType });\n    }\n  }\n}\n\nexport const createNode = (nodeType, entity) => ({\n  type: nodeType,\n  object: 'block',\n  data: {\n    target: {\n      sys: {\n        id: entity.sys.id,\n        type: 'Link',\n        linkType: entity.sys.type,\n      },\n    },\n  },\n});\n\nexport function insertBlock(editor, nodeType, entity, focusNextLine = true) {\n  const linkedEntityBlock = createNode(nodeType, entity);\n  if (editor.value.blocks.size === 0 || haveTextInSomeBlocks(editor)) {\n    editor.insertBlock(linkedEntityBlock);\n  } else {\n    editor.setBlocks(linkedEntityBlock);\n  }\n\n  if (focusNextLine) {\n    editor.insertBlock(BLOCKS.PARAGRAPH).focus();\n  }\n}\n","import { css } from 'emotion';\n\nexport const styles = {\n  icon: css({\n    marginRight: '10px',\n  }),\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { selectEntityAndInsert } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\nimport { styles } from './EmbeddedEntityBlock.styles';\n\nimport { Flex, Icon, Button, Menu } from '@contentful/f36-components';\n\nimport { AssetIcon, EmbeddedEntryBlockIcon } from '@contentful/f36-icons';\n\nexport default class EntityLinkToolbarIcon extends Component {\n  static propTypes = {\n    ...TOOLBAR_PLUGIN_PROP_TYPES,\n    isButton: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    isButton: false,\n  };\n\n  handleClick = (e) => {\n    this.handleAction(e);\n  };\n\n  handleAction = toolbarActionHandlerWithSafeAutoFocus(this, async () => {\n    const {\n      editor,\n      nodeType,\n      richTextAPI: { sdk, logToolbarAction },\n    } = this.props;\n    await selectEntityAndInsert(nodeType, sdk, editor, logToolbarAction);\n    this.props.onToggle(editor);\n  });\n\n  render() {\n    const { nodeType } = this.props;\n    const type = getEntityTypeFromNodeType(nodeType);\n    const baseClass = `rich-text__${nodeType}`;\n    return this.props.isButton ? (\n      <Button\n        isDisabled={this.props.disabled}\n        className={`${baseClass}-button`}\n        size=\"small\"\n        onClick={this.handleClick}\n        startIcon={type === 'Asset' ? <AssetIcon /> : <EmbeddedEntryBlockIcon />}\n        variant=\"secondary\"\n        testId={`toolbar-toggle-${nodeType}`}>\n        {`Embed ${type.toLowerCase()}`}\n      </Button>\n    ) : (\n      <Menu.Item\n        disabled={this.props.disabled}\n        className={`${baseClass}-list-item`}\n        onClick={this.handleClick}\n        testId={`toolbar-toggle-${nodeType}`}>\n        <Flex alignItems=\"center\" flexDirection=\"row\">\n          <Icon\n            as={type === 'Asset' ? AssetIcon : EmbeddedEntryBlockIcon}\n            className={`rich-text__embedded-entry-list-icon ${styles.icon}`}\n            variant=\"secondary\"\n          />\n          <span>{type}</span>\n        </Flex>\n      </Menu.Item>\n    );\n  }\n}\n\n/**\n * Returns the entity type depending on the given node type.\n * @param {string} nodeType\n * @returns {string}\n */\nfunction getEntityTypeFromNodeType(nodeType) {\n  const words = nodeType.toLowerCase().split('-');\n  if (words.includes('entry')) {\n    return 'Entry';\n  }\n  if (words.includes('asset')) {\n    return 'Asset';\n  }\n  throw new Error(`Node type \\`${nodeType}\\` has no associated \\`entityType\\``);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport { FetchingWrappedEntryCard } from './FetchingWrappedEntryCard';\nimport { FetchingWrappedAssetCard } from './FetchingWrappedAssetCard';\n\nconst styles = {\n  root: css({\n    marginBottom: '1.25rem',\n  }),\n};\n\nexport default class LinkedEntityBlock extends React.Component {\n  static propTypes = {\n    sdk: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    attributes: PropTypes.object.isRequired,\n    editor: PropTypes.object.isRequired,\n    node: PropTypes.object.isRequired,\n    onEntityFetchComplete: PropTypes.func.isRequired,\n  };\n\n  getEntitySys() {\n    const data = this.props.node.data;\n    return {\n      id: data.get('target').sys.id,\n      type: data.get('target').sys.linkType,\n    };\n  }\n\n  handleEditClick = () => {\n    const { type, id } = this.getEntitySys();\n    const { navigator } = this.props.sdk;\n    const openEntity = type === 'Asset' ? navigator.openAsset : navigator.openEntry;\n    return openEntity(id, { slideIn: true });\n  };\n\n  handleRemoveClick = () => {\n    const { editor, node } = this.props;\n    editor.moveToRangeOfNode(node);\n    editor.removeNodeByKey(node.key);\n    editor.focus(); // Click on \"x\" might have removed focus.\n  };\n\n  render() {\n    const { sdk, editor, isSelected } = this.props;\n    const isDisabled = editor.props.readOnly || editor.props.actionsDisabled;\n    const { id: entityId, type: entityType } = this.getEntitySys();\n    return (\n      <div {...this.props.attributes} className={styles.root}>\n        {entityType === 'Entry' && (\n          <FetchingWrappedEntryCard\n            sdk={sdk}\n            entryId={entityId}\n            locale={sdk.field.locale}\n            isDisabled={isDisabled}\n            isSelected={isSelected}\n            onRemove={this.handleRemoveClick}\n            onEdit={this.handleEditClick}\n            getEntryUrl={() => {\n              const getEntryUrl = sdk.parameters.instance.getEntryUrl;\n              return typeof getEntryUrl === 'function' ? getEntryUrl(entityId) : '';\n            }}\n            onEntityFetchComplete={this.props.onEntityFetchComplete}\n          />\n        )}\n        {entityType === 'Asset' && (\n          <FetchingWrappedAssetCard\n            sdk={sdk}\n            assetId={entityId}\n            locale={sdk.field.locale}\n            isDisabled={isDisabled}\n            isSelected={isSelected}\n            onRemove={this.handleRemoveClick}\n            onEdit={this.handleEditClick}\n            getAssetUrl={() => {\n              const getAssetUrl = sdk.parameters.instance.getAssetUrl;\n              return typeof getAssetUrl === 'function' ? getAssetUrl(entityId) : '';\n            }}\n            onEntityFetchComplete={this.props.onEntityFetchComplete}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport isHotkey from 'is-hotkey';\n\nimport ToolbarIcon from './ToolbarIcon';\nimport EntityLinkBlock from './EmbeddedEntityBlock';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { hasBlockOfType, selectEntityAndInsert } from './Util';\n\nexport default ToolbarIcon;\n\nexport const EmbeddedEntityBlockPlugin = ({\n  richTextAPI: { sdk, logShortcutAction, logViewportAction },\n  nodeType,\n  hotkey,\n}) => {\n  return {\n    renderNode: (props, _editor, next) => {\n      const { node, attributes, key } = props;\n      if (node.type === nodeType) {\n        return (\n          <EntityLinkBlock\n            sdk={sdk}\n            {...props}\n            {...attributes}\n            onEntityFetchComplete={() => {\n              logViewportAction('linkRendered', { key });\n            }}\n          />\n        );\n      }\n      return next();\n    },\n    onKeyDown(e, editor, next) {\n      if (hotkey && isHotkey(hotkey, e)) {\n        selectEntityAndInsert(nodeType, sdk, editor, logShortcutAction);\n        return;\n      }\n      if (isHotkey('enter', e) && hasBlockOfType(editor, nodeType)) {\n        editor.insertBlock(BLOCKS.PARAGRAPH).focus();\n        return;\n      }\n      return next();\n    },\n  };\n};\n\nexport const EmbeddedEntryBlockPlugin = ({ richTextAPI }) => {\n  return EmbeddedEntityBlockPlugin({\n    richTextAPI,\n    nodeType: BLOCKS.EMBEDDED_ENTRY,\n    hotkey: ['mod+shift+e'],\n  });\n};\n\nexport const EmbeddedAssetBlockPlugin = ({ richTextAPI }) => {\n  return EmbeddedEntityBlockPlugin({\n    richTextAPI,\n    nodeType: BLOCKS.EMBEDDED_ASSET,\n    hotkey: ['mod+shift+a'],\n  });\n};\n","import { INLINES } from '@contentful/rich-text-types';\nimport { haveAnyInlines, haveEveryInlineOfType, haveInlines } from '../shared/UtilHave';\nimport newEntitySelectorConfigFromRichTextField from '../../helpers/newEntitySelectorConfigFromRichTextField';\n\nconst createInlineNode = (id) => ({\n  type: INLINES.EMBEDDED_ENTRY,\n  object: 'inline',\n  data: {\n    target: {\n      sys: {\n        id,\n        type: 'Link',\n        linkType: 'Entry',\n      },\n    },\n  },\n});\n\nexport const insertInline = (editor, entryId, focusNextLine = true) => {\n  if (haveInlines(editor, INLINES.EMBEDDED_ENTRY)) {\n    editor.setInlines(createInlineNode(entryId));\n  } else {\n    editor.insertInline(createInlineNode(entryId));\n  }\n\n  focusNextLine ? editor.moveToStartOfNextText().focus() : null;\n};\n\nexport const hasOnlyInlineEntryInSelection = (editor) => {\n  const inlines = editor.value.inlines;\n  const selection = editor.value.selection;\n  if (inlines.size === 1 && selection.start.key === selection.end.key) {\n    return inlines.get(0).type === INLINES.EMBEDDED_ENTRY;\n  }\n};\n\n/**\n * Invokes entity selector modal and inserts inline embed.\n * @param {import('@contentful/field-editor-reference/dist/types').FieldExtensionSDK} sdk\n * @param {slate.Editor} editor\n * @param {function} logAction\n */\nexport const selectEntryAndInsert = async (sdk, editor, logAction) => {\n  const nodeType = INLINES.EMBEDDED_ENTRY;\n  logAction('openCreateEmbedDialog', { nodeType });\n\n  const { field, dialogs } = sdk;\n  const baseConfig = newEntitySelectorConfigFromRichTextField(field, nodeType);\n  const config = { ...baseConfig, withCreate: true };\n  try {\n    const entry = await dialogs.selectSingleEntry(config);\n    if (!entry) {\n      return;\n    }\n    insertInline(editor, entry.sys.id);\n    logAction('insert', { nodeType });\n  } catch (error) {\n    if (error) {\n      throw error;\n    } else {\n      logAction('cancelCreateEmbedDialog', { nodeType });\n    }\n  }\n};\n\nexport const canInsertInline = (editor) => {\n  return !haveAnyInlines(editor) || haveEveryInlineOfType(editor, INLINES.EMBEDDED_ENTRY);\n};\n","import { css } from 'emotion';\n\nexport const styles = {\n  icon: css({\n    marginRight: '10px',\n  }),\n\n  root: css({\n    margin: '0px 5px',\n    fontSize: 'inherit',\n    span: {\n      webkitUserSelect: 'none',\n      mozUserSelect: 'none',\n      msUserSelect: 'none',\n      userSelect: 'none',\n    },\n  }),\n};\n","import React, { Component } from 'react';\nimport { INLINES } from '@contentful/rich-text-types';\n\nimport { selectEntryAndInsert, canInsertInline } from './Utils';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\nimport { styles } from './EmbeddedEntryInline.styles';\n\nimport { Flex, Button, Menu } from '@contentful/f36-components';\n\nimport { EmbeddedEntryInlineIcon } from '@contentful/f36-icons';\n\nexport default class EntryLinkToolbarIcon extends Component {\n  static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n  static defaultProps = {\n    isButton: false,\n  };\n\n  handleClick = (e) => {\n    this.handleAction(e);\n  };\n\n  handleAction = toolbarActionHandlerWithSafeAutoFocus(this, async () => {\n    const {\n      editor,\n      richTextAPI: { sdk, logToolbarAction },\n    } = this.props;\n    await selectEntryAndInsert(sdk, editor, logToolbarAction);\n    this.props.onToggle(editor);\n  });\n\n  render() {\n    return this.props.isButton ? (\n      <Button\n        isDisabled={this.props.disabled}\n        className={`${INLINES.EMBEDDED_ENTRY}-button`}\n        size=\"small\"\n        onClick={(event) => this.handleClick(event)}\n        startIcon={<EmbeddedEntryInlineIcon />}\n        variant=\"secondary\"\n        testId={`toolbar-toggle-${INLINES.EMBEDDED_ENTRY}`}>\n        Embed inline entry\n      </Button>\n    ) : (\n      <Menu.Item\n        disabled={this.props.disabled || !canInsertInline(this.props.editor)}\n        className=\"rich-text__entry-link-block-button\"\n        testId={`toolbar-toggle-${INLINES.EMBEDDED_ENTRY}`}\n        onClick={this.handleClick}>\n        <Flex alignItems=\"center\" flexDirection=\"row\">\n          <EmbeddedEntryInlineIcon\n            variant=\"secondary\"\n            className={`rich-text__embedded-entry-list-icon ${styles.icon}`}\n          />\n          <span>Inline entry</span>\n        </Flex>\n      </Menu.Item>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { InlineEntryCard, MenuItem, Text } from '@contentful/f36-components';\nimport { entityHelpers } from '@contentful/field-editor-shared';\nimport { useEntities, ScheduledIconWithTooltip } from '@contentful/field-editor-reference';\n\nimport { INLINES } from '@contentful/rich-text-types';\n\nimport { ClockIcon } from '@contentful/f36-icons';\n\nconst { getEntryTitle, getEntryStatus } = entityHelpers;\n\nconst styles = {\n  scheduledIcon: css({\n    verticalAlign: 'text-bottom',\n    marginRight: tokens.spacing2Xs,\n  }),\n};\n\nexport const FetchingWrappedInlineEntryCard = (props) => {\n  const { getOrLoadEntry, loadEntityScheduledActions, entries } = useEntities();\n\n  React.useEffect(() => {\n    getOrLoadEntry(props.entryId);\n  }, [props.entryId]);\n\n  const entry = entries[props.entryId];\n\n  React.useEffect(() => {\n    if (entry) {\n      props.onEntityFetchComplete && props.onEntityFetchComplete();\n    }\n  }, [entry]);\n\n  if (entry === 'failed') {\n    return (\n      <InlineEntryCard testId={INLINES.EMBEDDED_ENTRY} isSelected={props.isSelected}>\n        <Text>Entry missing or inaccessible</Text>\n      </InlineEntryCard>\n    );\n  }\n\n  if (entry === undefined) {\n    return <InlineEntryCard isLoading />;\n  }\n\n  const allContentTypes = props.sdk.space.getCachedContentTypes();\n\n  const contentType = allContentTypes.find(\n    (contentType) => contentType.sys.id === entry.sys.contentType.sys.id\n  );\n  const contentTypeName = contentType ? contentType.name : '';\n\n  const status = getEntryStatus(entry.sys);\n\n  if (status === 'deleted') {\n    return (\n      <InlineEntryCard\n        testId={INLINES.EMBEDDED_ENTRY}\n        isSelected={props.isSelected}\n        actions={[\n          <MenuItem key=\"remove\" onClick={props.onRemove}>\n            Remove\n          </MenuItem>,\n        ]}>\n        <Text>Entry missing or inaccessible</Text>\n      </InlineEntryCard>\n    );\n  }\n\n  const title = getEntryTitle({\n    entry: entry,\n    contentType,\n    localeCode: props.sdk.field.locale,\n    defaultLocaleCode: props.sdk.locales.default,\n    defaultTitle: 'Untitled',\n  });\n\n  return (\n    <InlineEntryCard\n      testId={INLINES.EMBEDDED_ENTRY}\n      isSelected={props.isSelected}\n      title={`${contentTypeName}: ${title}`}\n      status={status}\n      actions={\n        !props.isReadOnly\n          ? [\n              <MenuItem key=\"edit\" onClick={props.onEdit}>\n                Edit\n              </MenuItem>,\n              <MenuItem key=\"edit\" onClick={props.onRemove} isDisabled={props.isDisabled}>\n                Remove\n              </MenuItem>,\n            ]\n          : undefined\n      }>\n      <ScheduledIconWithTooltip\n        getEntityScheduledActions={loadEntityScheduledActions}\n        entityType=\"Entry\"\n        entityId={entry.sys.id}>\n        <ClockIcon className={styles.scheduledIcon} variant=\"muted\" testId=\"scheduled-icon\" />\n      </ScheduledIconWithTooltip>\n      <Text>{title}</Text>\n    </InlineEntryCard>\n  );\n};\n\nFetchingWrappedInlineEntryCard.propTypes = {\n  sdk: PropTypes.object.isRequired,\n  entryId: PropTypes.string.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  isReadOnly: PropTypes.bool.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onEntityFetchComplete: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FetchingWrappedInlineEntryCard } from './FetchingWrappedInlineEntryCard';\nimport { styles } from './EmbeddedEntryInline.styles';\n\nclass EmbeddedEntryInline extends React.Component {\n  static propTypes = {\n    sdk: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    attributes: PropTypes.object.isRequired,\n    editor: PropTypes.object.isRequired,\n    node: PropTypes.object.isRequired,\n    onEntityFetchComplete: PropTypes.func.isRequired,\n  };\n\n  getEntitySys() {\n    const data = this.props.node.data;\n    return {\n      id: data.get('target').sys.id,\n      type: data.get('target').sys.linkType,\n    };\n  }\n\n  handleEditClick = () => {\n    const { id } = this.getEntitySys();\n    return this.props.sdk.navigator.openEntry(id, { slideIn: true });\n  };\n\n  handleRemoveClick = () => {\n    const { editor, node } = this.props;\n    editor.removeNodeByKey(node.key);\n  };\n\n  render() {\n    const { sdk, editor, isSelected } = this.props;\n    const isDisabled = editor.props.readOnly;\n    const isReadOnly = editor.props.actionsDisabled;\n    const { id: entryId } = this.getEntitySys();\n    return (\n      <span {...this.props.attributes} className={styles.root}>\n        <FetchingWrappedInlineEntryCard\n          sdk={sdk}\n          entryId={entryId}\n          isSelected={isSelected}\n          isDisabled={isDisabled}\n          isReadOnly={isReadOnly}\n          onRemove={this.handleRemoveClick}\n          onEdit={this.handleEditClick}\n          onEntityFetchComplete={this.props.onEntityFetchComplete}\n        />\n      </span>\n    );\n  }\n}\n\nexport default EmbeddedEntryInline;\n","import React from 'react';\nimport isHotkey from 'is-hotkey';\nimport { INLINES } from '@contentful/rich-text-types';\nimport ToolbarIcon from './ToolbarIcon';\nimport EmbeddedEntryInline from './EmbeddedEntryInline';\n\nimport { selectEntryAndInsert, hasOnlyInlineEntryInSelection, canInsertInline } from './Utils';\n\nexport default ToolbarIcon;\n\nexport const EmbeddedEntryInlinePlugin = ({\n  richTextAPI: { sdk, logShortcutAction, logViewportAction },\n}) => ({\n  renderNode: (props, _editor, next) => {\n    const { node, attributes, key } = props;\n    if (node.type === INLINES.EMBEDDED_ENTRY) {\n      return (\n        <EmbeddedEntryInline\n          sdk={sdk}\n          {...props}\n          {...attributes}\n          onEntityFetchComplete={() => {\n            logViewportAction('linkRendered', { key });\n          }}\n        />\n      );\n    }\n    return next();\n  },\n  onKeyDown: (event, editor, next) => {\n    const hotkey = ['mod+shift+2'];\n    if (isHotkey(hotkey, event)) {\n      if (canInsertInline(editor)) {\n        selectEntryAndInsert(sdk, editor, logShortcutAction);\n        return;\n      }\n    }\n    if (isHotkey('enter', event)) {\n      if (hasOnlyInlineEntryInSelection(editor)) {\n        event.preventDefault();\n        editor.moveToStartOfNextText();\n        return;\n      }\n    }\n    return next();\n  },\n});\n","import * as React from 'react';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\nimport EditList from './EditListWrapper';\n\nconst applyChange = (editor, type, logAction) => {\n  const {\n    utils,\n    changes: { unwrapList, wrapInList },\n  } = EditList();\n\n  if (utils.isSelectionInList(editor.value)) {\n    if (utils.getCurrentList(editor.value).type !== type) {\n      const currentList = utils.getCurrentList(editor.value);\n      editor.setNodeByKey(currentList.key, type);\n      logAction('insert', { nodeType: type });\n    } else {\n      unwrapList(editor);\n      logAction('remove', { nodeType: type });\n    }\n  } else {\n    wrapInList(editor, type);\n    logAction('insert', { nodeType: type });\n  }\n\n  return editor.focus();\n};\n\nconst isActive = (editor, type) => {\n  const list = EditList().utils.getCurrentList(editor.value);\n\n  if (list) {\n    return list.type === type;\n  }\n  return false;\n};\n\nexport default ({ type, title, children }) =>\n  (Block) => {\n    return class ToolbarDecorator extends React.Component {\n      static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n      handleToggle = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n        const {\n          editor,\n          onToggle,\n          richTextAPI: { logToolbarAction },\n        } = this.props;\n        applyChange(editor, type, logToolbarAction);\n        onToggle(editor);\n      });\n\n      render() {\n        const { editor } = this.props;\n        return (\n          <Block\n            type={type}\n            title={title}\n            onToggle={this.handleToggle}\n            isActive={isActive(editor, type)}\n            disabled={this.props.disabled}>\n            {children}\n          </Block>\n        );\n      }\n    };\n  };\n","import React from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport commonNode from '../shared/NodeDecorator';\nimport listToggleDecorator from './ToolbarDecorator';\nimport EditListWrapper from './EditListWrapper';\nimport { ListBulletedIcon, ListNumberedIcon } from '@contentful/f36-icons';\n\nexport const ListPlugin = () => {\n  return {\n    ...EditListWrapper(),\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === BLOCKS.UL_LIST) {\n        return commonNode('ul')(props);\n      } else if (props.node.type === BLOCKS.OL_LIST) {\n        return commonNode('ol')(props);\n      } else if (props.node.type === BLOCKS.LIST_ITEM) {\n        return commonNode('li')(props);\n      }\n      return next();\n    },\n  };\n};\n\nexport const UnorderedList = listToggleDecorator({\n  type: BLOCKS.UL_LIST,\n  title: 'UL',\n  children: <ListBulletedIcon />,\n})((props) => <ToolbarIcon {...props} />);\n\nexport const OrderedList = listToggleDecorator({\n  type: BLOCKS.OL_LIST,\n  title: 'OL',\n  children: <ListNumberedIcon />,\n})((props) => <ToolbarIcon {...props} />);\n","import React, { Component } from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport blockSelectDecorator from '../shared/BlockSelectDecorator';\nimport { haveTextInSomeBlocks } from '../shared/UtilHave';\nimport { css, cx } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { HorizontalRuleIcon } from '@contentful/f36-icons';\n\nconst styles = {\n  hr: css`\n    height: ${tokens.spacingM};\n    background: transparent;\n    position: relative;\n    margin: 0 0 ${tokens.spacingL};\n    &:hover {\n      cursor: pointer;\n    }\n    &::after {\n      content: '';\n      position: absolute;\n      width: 100%;\n      height: 1px;\n      background: ${tokens.gray300};\n      top: 50%;\n    }\n  `,\n  hrSelected: css`\n    &::after {\n      background: ${tokens.colorPrimary};\n      -webkit-box-shadow: 0px 0px 5px ${tokens.colorPrimary};\n      box-shadow: 0px 0px 5px ${tokens.colorPrimary};\n    }\n  `,\n};\n\nexport const HrPlugin = () => {\n  return {\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === BLOCKS.HR) {\n        return (\n          <hr\n            className={cx(styles.hr, props.isSelected && styles.hrSelected)}\n            {...props.attributes}\n          />\n        );\n      }\n      return next();\n    },\n  };\n};\n\nclass Hr extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default blockSelectDecorator({\n  type: BLOCKS.HR,\n  title: 'HR',\n  children: <HorizontalRuleIcon />,\n  applyChange: (editor, type) => {\n    const hr = {\n      type,\n      object: 'block',\n    };\n\n    if (editor.value.blocks.size === 0 || haveTextInSomeBlocks(editor)) {\n      editor.insertBlock(hr);\n    } else {\n      editor.setBlocks(hr);\n    }\n\n    editor.insertBlock(BLOCKS.PARAGRAPH).focus();\n  },\n})(Hr);\n","import * as contentfulSlateJSAdapter from '@contentful/contentful-slatejs-adapter';\nimport { documentToPlainTextString } from '@contentful/rich-text-plain-text-renderer';\nimport schema from '../../constants/Schema';\n\nexport const getCharacterCount = (editor) => {\n  const document = contentfulSlateJSAdapter.toContentfulDocument({\n    document: editor.value.document.toJSON(),\n    schema,\n  });\n  return documentToPlainTextString(document).length;\n};\n","import { getCharacterCount } from './Paste';\n\n/**\n * This plugin tracks the character count before and after a paste event,\n * including the text selected during the event. This creates parity with our\n * tracking for the markdown editor.\n */\nexport const PastePlugin = ({ richTextAPI: { logShortcutAction } }) => ({\n  onPaste(_event, editor, next) {\n    const characterCountSelection = global.getSelection().toString().length;\n    const characterCountBefore = getCharacterCount(editor);\n\n    setTimeout(() => {\n      const characterCountAfter = getCharacterCount(editor);\n      logShortcutAction('paste', {\n        characterCountAfter,\n        characterCountBefore,\n        characterCountSelection,\n      });\n    });\n    next();\n    return;\n  },\n});\n","import HtmlSerializer from 'slate-html-serializer';\nimport { BLOCKS, MARKS, INLINES } from '@contentful/rich-text-types';\n\n/**\n * Tags to block types mapping\n */\nconst BLOCK_TAGS = {\n  p: BLOCKS.PARAGRAPH,\n  ul: BLOCKS.UL_LIST,\n  ol: BLOCKS.OL_LIST,\n  blockquote: BLOCKS.QUOTE,\n  hr: BLOCKS.HR,\n  h1: BLOCKS.HEADING_1,\n  h2: BLOCKS.HEADING_2,\n  h3: BLOCKS.HEADING_3,\n  h4: BLOCKS.HEADING_4,\n  h5: BLOCKS.HEADING_5,\n  h6: BLOCKS.HEADING_6,\n};\n\n/**\n * tags to marks types mapping\n */\nconst MARK_TAGS = {\n  strong: MARKS.BOLD,\n  b: MARKS.BOLD,\n  em: MARKS.ITALIC,\n  i: MARKS.ITALIC,\n  u: MARKS.UNDERLINE,\n  code: MARKS.CODE,\n};\n\nconst isGoogleWrapper = (el) =>\n  el.tagName.toLowerCase() === 'b' && el.id.startsWith('docs-internal-guid-');\n\nconst isGoogleBold = (el) => {\n  return el.style.fontWeight === '700';\n};\n\nconst isGoogleItalic = (el) => {\n  return el.style.fontStyle === 'italic';\n};\n\nconst isGoogleUnderline = (el) => {\n  return el.style.textDecoration === 'underline';\n};\n\nconst gDocsRules = {\n  deserialize(el, next) {\n    const isFromGoogleDocs = !!el.ownerDocument.querySelector('[id*=docs-internal-guid-]');\n\n    if (!isFromGoogleDocs) {\n      return;\n    }\n    if (isGoogleWrapper(el)) {\n      return next(el.childNodes);\n    }\n\n    /**\n     * Google Docs represent marks with css styles applied to SPAN\n     * instead of html tags.\n     * */\n    if (el.tagName.toLowerCase() === 'span') {\n      const marks = [];\n      if (isGoogleBold(el)) {\n        marks.push(MARKS.BOLD);\n      }\n      if (isGoogleItalic(el)) {\n        marks.push(MARKS.ITALIC);\n      }\n      if (isGoogleUnderline(el)) {\n        marks.push(MARKS.UNDERLINE);\n      }\n\n      const textNode = {\n        object: 'text',\n        leaves: [\n          {\n            object: 'leaf',\n            text: el.textContent,\n            marks: marks.map((type) => ({ object: 'mark', type })),\n          },\n        ],\n      };\n\n      return textNode;\n    }\n  },\n};\n\nconst listItems = {\n  deserialize(el, next) {\n    /** list-items in Contentful's schema must have blocks as direct children */\n    if (el.tagName.toLowerCase() === 'li') {\n      let childNodes = next(el.childNodes);\n\n      childNodes = childNodes.map((node) => {\n        if (node.object === 'text') {\n          return {\n            object: 'block',\n            type: BLOCKS.PARAGRAPH,\n            nodes: [node],\n          };\n        } else {\n          return node;\n        }\n      });\n\n      return {\n        object: 'block',\n        type: BLOCKS.LIST_ITEM,\n        nodes: childNodes,\n      };\n    }\n  },\n};\n\nconst links = {\n  deserialize(el, next) {\n    if (el.tagName.toLowerCase() === 'a') {\n      // we only support links with href,\n      // if href is not defined, we should serialize as text\n      if (el.getAttribute('href')) {\n        return {\n          object: 'inline',\n          type: INLINES.HYPERLINK,\n          nodes: next(el.childNodes),\n          data: {\n            uri: el.getAttribute('href'),\n          },\n        };\n      } else {\n        return next(el.childNodes);\n      }\n    }\n  },\n};\n\nconst macOSTrailingBreak = {\n  deserialize(el) {\n    if (el.tagName.toLowerCase() === 'br' && el.classList.contains('Apple-interchange-newline')) {\n      return null;\n    }\n  },\n};\n\nconst marks = {\n  deserialize(el, next) {\n    const mark = MARK_TAGS[el.tagName.toLowerCase()];\n    if (mark) {\n      return {\n        object: 'mark',\n        type: mark,\n        nodes: next(el.childNodes),\n      };\n    }\n  },\n};\n\nconst blocks = {\n  deserialize(el, next) {\n    const block = BLOCK_TAGS[el.tagName.toLowerCase()];\n    if (block) {\n      const childNodes = next(el.childNodes);\n\n      return {\n        object: 'block',\n        type: block,\n        nodes: childNodes.length > 0 ? childNodes : [{ object: 'text' }],\n      };\n    }\n  },\n};\n\nconst RULES = [gDocsRules, listItems, links, macOSTrailingBreak, marks, blocks];\n\nexport const create = () => {\n  return new HtmlSerializer({\n    rules: RULES,\n  });\n};\n","const RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE = 'richTextCommandsContext';\n\n/**\n * @description\n * Returns Command Palette command text or leading slash\n *\n * @param {Slate.Editor} editor\n * @returns {String}\n */\nexport const getCommandText = (editor) => {\n  // matches the character / literally (case sensitive)\n  if (!editor.value.startText) {\n    return null;\n  }\n  const COMMAND_REGEX = /\\/(\\S*)$/;\n  const startOffset = editor.value.selection.start.offset;\n  const textBefore = editor.value.startText.text.slice(0, startOffset);\n  const result = COMMAND_REGEX.exec(textBefore);\n  return result === null ? null : result[1] || result[0];\n};\n\n/**\n * @description\n * Returns Command Palette Decoration if applicable to current text.\n *\n * @param {Slate.Editor} editor\n * @returns {Slate.Decoration?}\n */\nexport const getDecorationOrDefault = (editor) => {\n  const value = editor.value;\n  if (!value.startText) {\n    return null;\n  }\n\n  const inputValue = getCommandText(editor);\n\n  const { selection } = value;\n\n  if (inputValue) {\n    const decoration = {\n      anchor: {\n        key: selection.start.key,\n        offset: selection.start.offset - (inputValue.length + 1),\n      },\n      focus: {\n        key: selection.start.key,\n        offset: selection.start.offset,\n      },\n      mark: {\n        type: RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE,\n      },\n    };\n    return decoration;\n  }\n  return null;\n};\n\nexport const hasCommandPaletteMarkType = (markType) => {\n  return markType === RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE;\n};\n\n/**\n * @description\n * Checks if document has command palette decoration\n *\n * @param {Slate.Editor} editor\n * @returns {Boolean}\n */\nexport const hasCommandPaletteDecoration = (editor) => {\n  const decorations = editor.value.document.getDecorations(editor);\n\n  if (decorations.isEmpty()) {\n    return false;\n  }\n\n  const commandPaletteDecoration = decorations.find(\n    (d) => d.mark.type === RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE\n  );\n  return Boolean(commandPaletteDecoration);\n};\n\nexport const removeCommand = (editor, command, anchorOffset = 1) => {\n  editor.removeTextByKey(\n    editor.value.selection.start.key,\n    editor.value.selection.start.offset - (command.length + anchorOffset),\n    command.length + anchorOffset\n  );\n};\n","import { isNodeTypeEnabled } from '../../validations';\nimport { INLINES, BLOCKS } from '@contentful/rich-text-types';\nimport { entityHelpers } from '@contentful/field-editor-shared';\n\nconst ACTIONS = {\n  EMBED: 'embed',\n  CREATE_EMBED: 'create_embed',\n};\n\nexport async function fetchAssets(sdk, query = '') {\n  const assets = await sdk.space.getAssets({ query });\n  return assets.items.map((asset) => ({\n    contentTypeName: 'Asset',\n    displayTitle: asset.fields.title ? asset.fields.title[sdk.field.locale] : 'Untitled',\n    id: asset.sys.id,\n    entry: asset,\n    thumbnail:\n      asset.fields.file &&\n      asset.fields.file[sdk.field.locale] &&\n      `${asset.fields.file[sdk.field.locale].url}?h=30`,\n  }));\n}\n\nexport async function fetchEntries(sdk, contentType, query = '') {\n  const entries = await sdk.space.getEntries({\n    content_type: contentType.sys.id,\n    query,\n  });\n\n  return Promise.all(\n    entries.items.map(async (entry) => {\n      const description = entityHelpers.getEntityDescription({\n        contentType,\n        entity: entry,\n        localeCode: sdk.field.locale,\n        defaultLocaleCode: sdk.locales.default,\n      });\n      const displayTitle = entityHelpers.getEntryTitle({\n        entry,\n        contentType,\n        localeCode: sdk.field.locale,\n        defaultLocaleCode: sdk.locales.default,\n        defaultTitle: 'Untitled',\n      });\n      return {\n        contentTypeName: contentType.name,\n        displayTitle: displayTitle,\n        id: entry.sys.contentType.sys.id,\n        description,\n        entry,\n      };\n    })\n  );\n}\n\n/**\n * @description\n * Checks the field validations if the current content type is valid to be linked/embedded.\n *\n * @param {Object} field\n * @param {Object} contentType\n * @param {String} embedType\n * @returns {Boolean}\n */\nexport const isValidLinkedContentType = (field, contentType, embedType) => {\n  if (field.validations.length === 0) {\n    return true;\n  }\n\n  const nodes = field.validations.filter((val) => val.nodes)[0].nodes;\n\n  if (nodes[embedType] === undefined) {\n    return true;\n  }\n\n  return !!nodes[embedType]\n    .filter((typeVal) => typeVal.linkContentType)\n    .reduce((pre, cur) => [...pre, cur.linkContentType], [])\n    .reduce((pre, cur) => [...pre, ...cur], [])\n    .find((ct) => ct === contentType.sys.id);\n};\n\nexport const isEmbeddingEnabled = (field) =>\n  isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ASSET) ||\n  isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ENTRY) ||\n  isNodeTypeEnabled(field, INLINES.EMBEDDED_ENTRY);\n\nexport class CommandPaletteActionBuilder {\n  constructor(sdk) {\n    this.sdk = sdk;\n  }\n\n  // TODO: Let's create dedicated functions for assets so we do not have to pass a CT.\n\n  maybeBuildEmbedAction(embedType, contentType, callback) {\n    if (!isNodeTypeEnabled(this.sdk.field, embedType)) {\n      return false;\n    }\n    const isAsset = !contentType;\n    if (!isAsset && !isValidLinkedContentType(this.sdk.field, contentType, embedType)) {\n      return false;\n    }\n\n    return buildAction(embedType, contentType, ACTIONS.EMBED, callback);\n  }\n\n  async maybeBuildCreateAndEmbedAction(embedType, contentType, callback) {\n    if (!isNodeTypeEnabled(this.sdk.field, embedType)) {\n      return false;\n    }\n\n    const isAsset = !contentType;\n    if (!isAsset) {\n      if (!isValidLinkedContentType(this.sdk.field, contentType, embedType)) {\n        return false;\n      }\n\n      const canCreateEntryOfContentType = await this.sdk.access.can('create', {\n        sys: {\n          type: 'Entry',\n          contentType: {\n            sys: contentType.sys,\n          },\n        },\n      });\n\n      if (canCreateEntryOfContentType === false) {\n        return false;\n      }\n    } else {\n      const canCreateAssets = await this.sdk.access.can('create', 'Asset');\n      if (canCreateAssets === false) {\n        return false;\n      }\n    }\n\n    return buildAction(embedType, contentType, ACTIONS.CREATE_EMBED, callback);\n  }\n}\n\nfunction buildAction(embedType, contentType, actionType, callback) {\n  const isAsset = !contentType;\n  const isInline = embedType === INLINES.EMBEDDED_ENTRY;\n  const label = `${actionType === ACTIONS.EMBED ? 'Embed' : 'Create and embed'} ${\n    isAsset ? 'Asset' : contentType.name\n  } ${isInline ? ' - Inline' : ''}`;\n\n  const icon = isInline ? 'EmbeddedEntryInline' : 'EmbeddedEntryBlock';\n\n  return {\n    label,\n    group: isAsset ? 'Assets' : contentType.name,\n    callback,\n    icon,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport isHotKey from 'is-hotkey';\nimport cn from 'classnames';\nimport { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport uniqBy from 'lodash/uniqBy';\nimport { CloseIcon } from '@contentful/f36-icons';\nimport {\n  Spinner,\n  SectionHeading,\n  SkeletonContainer,\n  SkeletonBodyText,\n  Icon,\n  IconButton,\n} from '@contentful/f36-components';\n\nconst styles = {\n  commandPanel: css({\n    display: 'block',\n    background: tokens.colorWhite,\n    boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1), 0 5px 10px -5px rgba(0, 0, 0, 0.3)',\n    border: `1px solid ${tokens.gray400}`,\n    borderRadius: tokens.borderRadiusMedium,\n    fontFamily: tokens.fontStackPrimary,\n    width: '500px',\n    overflowY: 'auto',\n  }),\n  commandPanelList: css({\n    display: 'block',\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    height: '200px',\n    overflowY: 'auto',\n  }),\n  item: css({\n    fontSize: tokens.fontSizeM,\n    lineHeight: tokens.lineHeightDefault,\n    padding: `${tokens.spacingS} ${tokens.spacingXs}`,\n    borderBottom: `1px solid ${tokens.gray300}`,\n    margin: 0,\n    color: tokens.gray900,\n  }),\n  divider: css({\n    fontWeight: tokens.fontWeightDemiBold,\n    padding: `${tokens.spacingS} ${tokens.spacingXs}`,\n    letterSpacing: tokens.letterSpacingWide,\n    fontSize: tokens.fontSizeS,\n    textTransform: 'uppercase',\n    borderBottom: `1px solid ${tokens.gray400}`,\n    margin: 0,\n    lineHeight: tokens.lineHeightDefault,\n    color: tokens.gray900,\n  }),\n  icon: css({\n    marginRight: 10,\n  }),\n  isSelected: css({\n    background: tokens.gray200,\n  }),\n  skeletonContainer: css({\n    padding: tokens.spacingM,\n    height: 200,\n    margin: 0,\n  }),\n  button: css({\n    textAlign: 'left',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    border: 'none',\n    background: 'transparent',\n    fontSize: tokens.fontSizeM,\n  }),\n  navBar: css({\n    display: 'flex',\n    bottom: 0,\n    background: tokens.gray100,\n    padding: `${tokens.spacingS} ${tokens.spacingXs}`,\n    width: '100%',\n  }),\n  loader: css({\n    marginLeft: 'auto',\n  }),\n  thumbnail: css({\n    marginRight: 15,\n  }),\n  instruction: css({\n    marginRight: 15,\n    color: tokens.gray600,\n  }),\n  closeButton: css({\n    marginLeft: 'auto',\n  }),\n};\n\nconst itemPropType = PropTypes.shape({\n  label: PropTypes.string,\n  icon: PropTypes.string,\n  thumbnail: PropTypes.string,\n  callback: PropTypes.func,\n});\n\nclass CommandPanelItem extends React.Component {\n  static propTypes = {\n    isSelected: PropTypes.bool,\n    index: PropTypes.number,\n    classNames: PropTypes.string,\n    item: itemPropType,\n  };\n  listItemRef = null;\n\n  componentDidUpdate() {\n    if (this.props.isSelected) {\n      this.listItemRef.scrollIntoView({\n        block: 'nearest',\n        inline: 'start',\n      });\n    }\n  }\n\n  render() {\n    const { index, classNames, item } = this.props;\n\n    return (\n      <li\n        key={index}\n        className={classNames}\n        ref={(ref) => {\n          this.listItemRef = ref;\n        }}>\n        <button type=\"button\" className={styles.button} onClick={item.callback && item.callback}>\n          {item.icon && <Icon className={styles.icon} as={item.icon} variant=\"secondary\" />}\n          {item.thumbnail && <img className={styles.thumbnail} src={item.thumbnail} alt=\"\" />}\n          {item.label}\n        </button>\n      </li>\n    );\n  }\n}\n\nconst Instruction = ({ children }) => <span className={styles.instruction}>{children}</span>;\nInstruction.propTypes = {\n  children: PropTypes.node,\n};\n\nexport class CommandPanel extends React.Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(itemPropType),\n    searchString: PropTypes.string,\n    className: PropTypes.string,\n    testId: PropTypes.string,\n    isLoading: PropTypes.bool,\n    isUpdating: PropTypes.bool,\n    breadcrumb: PropTypes.string,\n    richTextAPI: PropTypes.object,\n    onClose: PropTypes.func,\n  };\n  static defaultProps = {\n    className: undefined,\n    searchString: '',\n    items: [],\n    testId: 'cf-ui-command-panel',\n    isLoading: true,\n    isUpdating: false,\n  };\n\n  state = {\n    selectedKey: 0,\n    items: [],\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const itemsHasUpdated = props.items !== state.originalItems;\n    const searchStringHasUpdated = props.searchString !== state.originalSearchString;\n\n    const items = props.items.filter((item) =>\n      item.label.toLowerCase().includes(props.searchString ? props.searchString.toLowerCase() : '')\n    );\n\n    return {\n      originalItems: props.items,\n      originalSearchString: props.searchString,\n      items,\n      selectedKey: itemsHasUpdated || searchStringHasUpdated ? 0 : state.selectedKey,\n    };\n  }\n\n  componentDidMount() {\n    this.props.richTextAPI.logViewportAction('openRichTextCommandsPalette');\n    document.addEventListener('keydown', this.handleKeyboard, true);\n  }\n\n  componentWillUnmount() {\n    this.props.richTextAPI.logViewportAction('cancelRichTextCommandsPalette');\n    document.removeEventListener('keydown', this.handleKeyboard, true);\n  }\n\n  handleKeyboard = (e) => {\n    if (isHotKey('up', e)) {\n      if (this.state.selectedKey === 0) return;\n      this.setState((state) => ({\n        selectedKey: state.selectedKey - 1,\n      }));\n    }\n\n    if (isHotKey('down', e)) {\n      if (this.state.selectedKey === this.state.items.length - 1) return;\n      this.setState((state) => ({\n        selectedKey: state.selectedKey + 1,\n      }));\n    }\n\n    if (isHotKey('enter', e)) {\n      const selectedItem = this.state.items[this.state.selectedKey];\n      if (selectedItem && selectedItem.callback) selectedItem.callback();\n    }\n  };\n\n  renderGroups() {\n    const groups = uniqBy(\n      this.state.items.map((item) => item.group),\n      (value) => value\n    );\n\n    if (!groups.length) {\n      return <li className={styles.item}>No results</li>;\n    }\n\n    return groups.map((groupName, index) => {\n      return (\n        <React.Fragment key={index}>\n          {groupName && (\n            <li key={groupName} className={styles.divider}>\n              {groupName}\n            </li>\n          )}\n          {this.renderItems(groupName)}\n        </React.Fragment>\n      );\n    });\n  }\n\n  renderItems(groupName) {\n    return this.state.items\n      .filter((item) => item.group === groupName)\n      .map((item) => {\n        const index = this.state.items.indexOf(item);\n        const isSelected = index === this.state.selectedKey;\n\n        const classNames = cn(styles.item, {\n          [styles.isSelected]: isSelected,\n        });\n\n        return (\n          <CommandPanelItem\n            item={item}\n            classNames={classNames}\n            key={index}\n            isSelected={isSelected}\n          />\n        );\n      });\n  }\n\n  renderNavigationBar = () => (\n    <div className={styles.navBar}>\n      <SectionHeading marginBottom=\"none\">\n        {this.props.breadcrumb ? `Embed ${this.props.breadcrumb}` : 'Richtext Commands'}\n      </SectionHeading>\n      <IconButton\n        aria-label=\"Close\"\n        className={styles.closeButton}\n        icon={<CloseIcon variant=\"muted\" />}\n        variant=\"transparent\"\n        onClick={this.props.onClose}\n      />\n    </div>\n  );\n\n  renderStatusBar = () => (\n    <div className={styles.navBar}>\n      <span className={styles.instructions}>\n        <Instruction>↑ ↓ to navigate</Instruction>\n        <Instruction>↵ to confirm</Instruction>\n        <Instruction>esc to close</Instruction>\n      </span>\n      {this.props.isUpdating && (\n        <span className={styles.loader}>\n          loading <Spinner size=\"small\" />\n        </span>\n      )}\n    </div>\n  );\n\n  renderSkeleton = () => (\n    <li className={styles.skeletonContainer}>\n      <SkeletonContainer>\n        <SkeletonBodyText numberOfLines={7} />\n      </SkeletonContainer>\n    </li>\n  );\n\n  render() {\n    const { className, testId, isLoading } = this.props;\n\n    const classNames = cn(styles.commandPanel, className);\n\n    return (\n      <div className={classNames}>\n        {this.renderNavigationBar()}\n        <ul className={styles.commandPanelList} data-test-id={testId}>\n          {isLoading ? this.renderSkeleton() : this.renderGroups()}\n        </ul>\n        {this.renderStatusBar()}\n      </div>\n    );\n  }\n}\n\nexport default CommandPanel;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { cx, css } from 'emotion';\n\nconst throttle = (delay = 200, fn) => {\n  let lastCall = 0;\n  const throttleExec = (...args) => {\n    const now = new Date().getTime();\n    if (now - lastCall < delay) {\n      return;\n    }\n    lastCall = now;\n    return fn(...args); // eslint-disable-line\n  };\n  return throttleExec;\n};\n\nconst defaultProps = {\n  testId: 'cf-ui-in-viewport',\n  offset: 0,\n};\n\nconst isBrowser = typeof window !== 'undefined';\n\nexport class InViewport extends Component {\n  static defaultProps = defaultProps;\n\n  tGetDomPosition = null;\n  nodeRef = null;\n  lastOverflowAt = null;\n\n  tOnOverflowTop = this.props.onOverflowTop && throttle(100, this.props.onOverflowTop);\n  tOnOverflowBottom = this.props.onOverflowBottom && throttle(100, this.props.onOverflowBottom);\n  tOnOverflowRight = this.props.onOverflowRight && throttle(100, this.props.onOverflowRight);\n  tOnOverflowLeft = this.props.onOverflowLeft && throttle(100, this.props.onOverflowLeft);\n\n  componentDidMount() {\n    this.getDomPosition();\n    this.bindEventListeners();\n  }\n\n  componentDidUpdate() {\n    this.getDomPosition();\n  }\n\n  componentWillUnmount() {\n    if (isBrowser && this.tGetDomPosition) {\n      window.removeEventListener('scroll', this.tGetDomPosition, true);\n      window.removeEventListener('resize', this.tGetDomPosition);\n    }\n  }\n\n  getDomPosition = () => {\n    if (isBrowser && this.nodeRef) {\n      const html = document.documentElement;\n      const boundingClientRect = this.nodeRef.getBoundingClientRect();\n      const windowWidth = window.innerWidth || html.clientWidth;\n      const windowHeight = window.innerHeight || html.clientHeight;\n      this.handleOverflow(boundingClientRect, windowWidth, windowHeight);\n    }\n  };\n\n  bindEventListeners = () => {\n    this.tGetDomPosition = throttle(600, this.getDomPosition);\n    if (isBrowser && this.tGetDomPosition) {\n      window.addEventListener('scroll', this.tGetDomPosition, true);\n      window.addEventListener('resize', this.tGetDomPosition);\n    }\n  };\n\n  handleOverflow = ({ top, left, bottom, right }, windowWidth, windowHeight) => {\n    const { offset } = this.props;\n    const topThreshold = 0 - offset;\n    const leftThreshold = 0 - offset;\n    const rightThreshold = windowWidth + offset;\n    const bottomThreshold = windowHeight + offset;\n\n    if (top + right + bottom + left !== 0) {\n      if (top < topThreshold && this.lastOverflowAt !== 'bottom') {\n        this.lastOverflowAt = 'top';\n        this.tOnOverflowTop && this.tOnOverflowTop();\n      } else if (left < leftThreshold && this.lastOverflowAt !== 'right') {\n        this.lastOverflowAt = 'left';\n        this.tOnOverflowLeft && this.tOnOverflowLeft();\n      } else if (bottom > bottomThreshold && this.lastOverflowAt !== 'top') {\n        this.lastOverflowAt = 'bottom';\n        this.tOnOverflowBottom && this.tOnOverflowBottom();\n      } else if (right > rightThreshold && this.lastOverflowAt !== 'left') {\n        this.lastOverflowAt = 'right';\n        this.tOnOverflowRight && this.tOnOverflowRight();\n      }\n    }\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      testId,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onOverflowBottom,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onOverflowLeft,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onOverflowRight,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onOverflowTop,\n      ...otherProps\n    } = this.props;\n\n    const classNames = cx(css({ display: 'inline-block' }), className);\n\n    return (\n      <div\n        ref={(ref) => {\n          this.nodeRef = ref;\n        }}\n        className={classNames}\n        data-test-id={testId}\n        {...otherProps}>\n        {children}\n      </div>\n    );\n  }\n}\n\nInViewport.propTypes = {\n  offset: PropTypes.number,\n  onOverflowTop: PropTypes.func,\n  onOverflowRight: PropTypes.func,\n  onOverflowBottom: PropTypes.func,\n  onOverflowLeft: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.any,\n  testId: PropTypes.string,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { BLOCKS, INLINES } from '@contentful/rich-text-types';\nimport isHotKey from 'is-hotkey';\nimport throttle from 'lodash/throttle';\nimport flatten from 'lodash/flatten';\nimport { insertBlock } from '../../EmbeddedEntityBlock/Util';\nimport { insertInline } from '../../EmbeddedEntryInline/Utils';\nimport { fetchEntries, fetchAssets, CommandPaletteActionBuilder } from '../CommandPaletteService';\nimport { removeCommand } from '../Util';\nimport CommandPanelMenu from './CommandPanelMenu';\nimport { InViewport } from './InViewport/InViewport';\nimport tokens from '@contentful/f36-tokens';\n\nconst DEFAULT_POSITION = {\n  top: 0,\n  left: 0,\n};\nclass CommandPalette extends React.PureComponent {\n  static propTypes = {\n    editor: PropTypes.object,\n    command: PropTypes.string,\n    richTextAPI: PropTypes.object,\n  };\n\n  state = {\n    anchorPosition: DEFAULT_POSITION,\n    items: [],\n    isLoading: true,\n    panelPosition: 'bottom',\n  };\n\n  paletteDimensions = {\n    height: 300,\n    width: 300,\n  };\n\n  async componentDidMount() {\n    this.isComponentMounted = true;\n    await this.createInitialCommands();\n    this.updatePanelPosition();\n    this.paletteDimensions = {\n      height: this.palette.getBoundingClientRect().height,\n      width: this.palette.getBoundingClientRect().width,\n    };\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n    this.removeEventListeners();\n    this.requestUpdate.cancel();\n  }\n\n  bindEventListeners = () => {\n    document.addEventListener('scroll', this.handleScroll, true);\n    document.addEventListener('keydown', this.handleKeyboard, true);\n    document.addEventListener('click', this.handleOutsideClick, true);\n  };\n\n  removeEventListeners = () => {\n    document.removeEventListener('scroll', this.handleScroll, true);\n    document.removeEventListener('keydown', this.handleKeyboard, true);\n    document.removeEventListener('click', this.handleOutsideClick, true);\n  };\n\n  handleOutsideClick = (event) => {\n    if (!this.palette.contains(event.target)) {\n      this.setState({\n        isClosed: true,\n      });\n    }\n  };\n\n  requestUpdate = throttle(\n    () => {\n      if (this.state.currentCommand) {\n        this.setState({ isUpdating: true });\n        this.createCommands(\n          this.state.currentCommand.contentType,\n          this.state.currentCommand.type,\n          this.props.command\n        );\n      }\n    },\n    1000,\n    { leading: true, trailing: false }\n  );\n\n  componentDidUpdate() {\n    if (this.state.currentCommand && this.state.currentCommand.command !== this.props.command) {\n      this.requestUpdate();\n    } else {\n      this.requestUpdate.cancel();\n    }\n    if (!this.state.isClosed) {\n      this.bindEventListeners();\n    } else {\n      this.removeEventListeners();\n    }\n  }\n\n  createCommand = (label, contentType, entry, type, description, thumbnail) => ({\n    label: `${label}${description ? ` - ${description}` : ''}`,\n    thumbnail,\n    contentType,\n    callback: () => {\n      const { editor, command, richTextAPI } = this.props;\n      const { logCommandPaletteAction } = richTextAPI;\n      removeCommand(editor, command);\n      switch (type) {\n        case INLINES.EMBEDDED_ENTRY:\n          insertInline(editor, entry.sys.id, false);\n          logCommandPaletteAction('insert', {\n            nodeType: INLINES.EMBEDDED_ENTRY,\n          });\n          break;\n        case BLOCKS.EMBEDDED_ASSET:\n          insertBlock(editor, BLOCKS.EMBEDDED_ASSET, entry, false);\n          logCommandPaletteAction('insert', {\n            nodeType: BLOCKS.EMBEDDED_ASSET,\n          });\n          break;\n        default:\n          insertBlock(editor, BLOCKS.EMBEDDED_ENTRY, entry, false);\n          logCommandPaletteAction('insert', {\n            nodeType: BLOCKS.EMBEDDED_ENTRY,\n          });\n          break;\n      }\n    },\n  });\n\n  onCreateAndEmbedEntity = async (contentTypeId, nodeType) => {\n    const { richTextAPI, editor, command } = this.props;\n    const { sdk } = richTextAPI;\n    removeCommand(editor, command);\n    const { createAsset, createEntry } = sdk.space;\n    const isAsset = contentTypeId === null;\n    const createEntity = () => (isAsset ? createAsset({}) : createEntry(contentTypeId, {}));\n    const entity = await createEntity();\n    const { id: entityId, type: entityType } = entity.sys;\n\n    nodeType === INLINES.EMBEDDED_ENTRY\n      ? insertInline(editor, entity.sys.id, false)\n      : insertBlock(editor, nodeType, entity);\n\n    richTextAPI.logCommandPaletteAction('insert', {\n      nodeType,\n    });\n\n    const { navigator } = sdk;\n    const openEntity = entityType === 'Asset' ? navigator.openAsset : navigator.openEntry;\n    return openEntity(entityId, { slideIn: true });\n  };\n\n  createContentTypeActions = async (actionBuilder, contentType) => {\n    const actions = await Promise.all([\n      actionBuilder.maybeBuildEmbedAction(BLOCKS.EMBEDDED_ENTRY, contentType, () => {\n        this.setState({ breadcrumb: contentType.name, isLoading: true });\n        this.createCommands(contentType);\n        this.clearCommand();\n      }),\n      actionBuilder.maybeBuildEmbedAction(INLINES.EMBEDDED_ENTRY, contentType, () => {\n        this.setState({ breadcrumb: contentType.name, isLoading: true });\n        this.createCommands(contentType, INLINES.EMBEDDED_ENTRY);\n        this.clearCommand();\n      }),\n      actionBuilder.maybeBuildCreateAndEmbedAction(BLOCKS.EMBEDDED_ENTRY, contentType, () =>\n        this.onCreateAndEmbedEntity(contentType.sys.id, BLOCKS.EMBEDDED_ENTRY)\n      ),\n      actionBuilder.maybeBuildCreateAndEmbedAction(INLINES.EMBEDDED_ENTRY, contentType, () =>\n        this.onCreateAndEmbedEntity(contentType.sys.id, INLINES.EMBEDDED_ENTRY)\n      ),\n    ]);\n    return actions.filter((action) => action);\n  };\n\n  createAssetActions = async (actionBuilder) => {\n    const actions = await Promise.all([\n      actionBuilder.maybeBuildEmbedAction(BLOCKS.EMBEDDED_ASSET, null, () => {\n        this.setState({ breadcrumb: 'Asset', isLoading: true });\n        this.createCommands(null, BLOCKS.EMBEDDED_ASSET);\n        this.clearCommand();\n      }),\n      actionBuilder.maybeBuildCreateAndEmbedAction(BLOCKS.EMBEDDED_ASSET, null, () =>\n        this.onCreateAndEmbedEntity(null, BLOCKS.EMBEDDED_ASSET)\n      ),\n    ]);\n    return actions.filter((action) => action);\n  };\n\n  handleScroll = (e) => {\n    if (e.target.nodeName !== 'UL') {\n      this.updatePanelPosition();\n    }\n  };\n\n  clearCommand = () => {\n    if (this.props.command !== '/') {\n      removeCommand(this.props.editor, this.props.command, 0);\n    }\n  };\n\n  createCommands = async (contentType, type, command) => {\n    this.setState({ isUpdating: true });\n    const allEntries = !contentType\n      ? await fetchAssets(this.props.richTextAPI.sdk, command)\n      : await fetchEntries(this.props.richTextAPI.sdk, contentType, command);\n\n    if (this.isComponentMounted) {\n      this.setState({\n        currentCommand: {\n          contentType,\n          type,\n          command,\n        },\n        isUpdating: false,\n        isLoading: false,\n        items: allEntries.map((entry) =>\n          this.createCommand(\n            entry.displayTitle,\n            entry.contentTypeName,\n            entry.entry,\n            type,\n            entry.description,\n            entry.thumbnail\n          )\n        ),\n      });\n    }\n  };\n\n  createInitialCommands = async () => {\n    const { sdk } = this.props.richTextAPI;\n\n    const allContentTypes = sdk.space.getCachedContentTypes();\n\n    this.setState({\n      isLoading: false,\n    });\n\n    const actionBuilder = new CommandPaletteActionBuilder(sdk);\n\n    const contentTypeActions = flatten(\n      await Promise.all(\n        allContentTypes.map((ct) => this.createContentTypeActions(actionBuilder, ct))\n      )\n    );\n\n    const assetActions = await this.createAssetActions(actionBuilder);\n\n    this.setState((prevState) => ({\n      items: [...prevState.items, ...contentTypeActions, ...assetActions],\n    }));\n  };\n\n  handleKeyboard = (e) => {\n    const isEscKey = isHotKey('esc', e); // ESC to close menu shouldn't blur editor.\n    if (isEscKey || isHotKey('down', e) || isHotKey('up', e) || isHotKey('enter', e)) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    if (isEscKey || isHotKey('tab', e)) {\n      this.setState({\n        isClosed: true,\n      });\n    }\n  };\n\n  render() {\n    // Todo: Revisit tab index.\n    /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n    /* eslint-disable jsx-a11y/tabindex-no-positive */\n    if (this.state.isClosed) {\n      return null;\n    }\n    const root = window.document.body;\n    return ReactDOM.createPortal(\n      <div\n        tabIndex=\"1\"\n        ref={(ref) => {\n          this.palette = ref;\n        }}\n        style={{\n          position: 'absolute',\n          outline: 'none',\n          minWidth: 200,\n          top: this.state.anchorPosition.top,\n          left: this.state.anchorPosition.left,\n          zIndex: tokens.zIndexDropdown,\n        }}>\n        <InViewport\n          onOverflowBottom={() => {\n            if (this.state.panelPosition !== 'top') {\n              this.setState({ panelPosition: 'top' }, this.updatePanelPosition);\n            }\n          }}\n          onOverflowTop={() => {\n            if (this.state.panelPosition !== 'bottom') {\n              this.setState({ panelPosition: 'bottom' }, this.updatePanelPosition);\n            }\n          }}>\n          <CommandPanelMenu\n            searchString={this.props.command === '/' ? '' : this.props.command}\n            items={this.state.items}\n            isLoading={this.state.isLoading}\n            isUpdating={this.state.isUpdating}\n            onClose={() => {\n              this.setState({\n                isClosed: true,\n              });\n            }}\n            breadcrumb={this.state.breadcrumb}\n            richTextAPI={this.props.richTextAPI}\n          />\n        </InViewport>\n      </div>,\n      root\n    );\n  }\n\n  updatePanelPosition() {\n    const anchorRect = document.getSelection().getRangeAt(0).getBoundingClientRect();\n\n    this.setState((prevState) => ({\n      anchorPosition: {\n        top:\n          prevState.panelPosition === 'bottom'\n            ? anchorRect.bottom\n            : anchorRect.top - this.paletteDimensions.height,\n        left: anchorRect.left,\n      },\n    }));\n  }\n}\n\nexport default CommandPalette;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmbeddingEnabled } from './CommandPaletteService';\nimport { hasCommandPaletteDecoration, getCommandText } from './Util';\nimport CommandPanel from './CommandPanel';\nclass CommandPalette extends React.PureComponent {\n  static propTypes = {\n    editor: PropTypes.object,\n    richTextAPI: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { field } = this.props.richTextAPI.sdk;\n\n    this.state = {\n      embedsEnabled: isEmbeddingEnabled(field),\n    };\n  }\n\n  render() {\n    if (!hasCommandPaletteDecoration(this.props.editor) || !this.state.embedsEnabled) {\n      return null;\n    }\n\n    return (\n      <CommandPanel\n        editor={this.props.editor}\n        richTextAPI={this.props.richTextAPI}\n        command={getCommandText(this.props.editor)}\n      />\n    );\n  }\n}\n\nexport default CommandPalette;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CommandMark extends React.PureComponent {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    editor: PropTypes.object,\n    attributes: PropTypes.object,\n  };\n\n  render() {\n    // Todo: Revisit tab index.\n    /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n    /* eslint-disable jsx-a11y/tabindex-no-positive */\n    const { children, attributes } = this.props;\n    return (\n      <span tabIndex=\"1\" {...attributes} className=\"command-context\">\n        {children}\n      </span>\n    );\n  }\n}\n\nexport default CommandMark;\n","import React from 'react';\n\nimport { getDecorationOrDefault, hasCommandPaletteMarkType } from './Util';\nimport CommandPalette from './CommandPalette';\nimport CommandMark from './CommandMark';\n\nexport const CommandPalettePlugin = ({ richTextAPI }) => ({\n  /* eslint-disable react/display-name */\n  decorateNode: (_node, editor, next) => {\n    const others = next();\n\n    const decoration = getDecorationOrDefault(editor);\n\n    if (decoration) {\n      return [...others, decoration];\n    }\n\n    return [...others];\n  },\n  renderMark: (props, editor, next) => {\n    if (hasCommandPaletteMarkType(props.mark.type)) {\n      return (\n        <CommandMark attributes={props.attributes} editor={editor}>\n          {props.children}\n        </CommandMark>\n      );\n    }\n    return next();\n  },\n  renderEditor: (_props, editor, next) => {\n    const children = next();\n    return (\n      <React.Fragment>\n        {children}\n        <CommandPalette\n          anchor={editor.state.commandMark}\n          value={editor.value}\n          editor={editor}\n          richTextAPI={richTextAPI}\n        />\n      </React.Fragment>\n    );\n  },\n});\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { BoldPlugin } from './Bold';\nimport { ItalicPlugin } from './Italic';\nimport { UnderlinedPlugin } from './Underlined';\nimport { CodePlugin } from './Code';\nimport { QuotePlugin } from './Quote';\nimport { HyperlinkPlugin } from './Hyperlink';\nimport {\n  Heading1Plugin,\n  Heading2Plugin,\n  Heading3Plugin,\n  Heading4Plugin,\n  Heading5Plugin,\n  Heading6Plugin,\n} from './Heading';\n\nimport NewLinePlugin from './NewLinePlugin';\nimport { ParagraphPlugin } from './Paragraph';\n\nimport { EmbeddedAssetBlockPlugin, EmbeddedEntryBlockPlugin } from './EmbeddedEntityBlock';\nimport { EmbeddedEntryInlinePlugin } from './EmbeddedEntryInline';\n\nimport { ListPlugin } from './List';\nimport { HrPlugin } from './Hr';\n\nimport TrailingBlock from '@wikifactory/slate-trailing-block';\nimport { PastePlugin } from './Paste';\nimport { PasteHtmlPlugin } from './PasteHtml';\nimport { PasteTextPlugin } from './PasteText';\n\nimport { CommandPalettePlugin } from './CommandPalette';\nimport { InsertBeforeFirstVoidBlockPlugin } from './InsertBeforeFirstVoidBlock';\n\nimport schema from '../constants/Schema';\n\nexport function buildPlugins(richTextAPI) {\n  return [\n    { schema },\n    InsertBeforeFirstVoidBlockPlugin({ richTextAPI }),\n    BoldPlugin({ richTextAPI }),\n    ItalicPlugin({ richTextAPI }),\n    UnderlinedPlugin({ richTextAPI }),\n    CodePlugin({ richTextAPI }),\n    QuotePlugin({ richTextAPI }),\n    HyperlinkPlugin({ richTextAPI }),\n    Heading1Plugin({ richTextAPI }),\n    Heading2Plugin({ richTextAPI }),\n    Heading3Plugin({ richTextAPI }),\n    Heading4Plugin({ richTextAPI }),\n    Heading5Plugin({ richTextAPI }),\n    Heading6Plugin({ richTextAPI }),\n    ParagraphPlugin(),\n    HrPlugin({ richTextAPI }),\n    EmbeddedEntryInlinePlugin({ richTextAPI }),\n    EmbeddedEntryBlockPlugin({ richTextAPI }),\n    EmbeddedAssetBlockPlugin({ richTextAPI }),\n    ListPlugin({ richTextAPI }),\n    PastePlugin({ richTextAPI }),\n    PasteHtmlPlugin(),\n    PasteTextPlugin(),\n    CommandPalettePlugin({ richTextAPI }),\n    TrailingBlock({ type: BLOCKS.PARAGRAPH }),\n    NewLinePlugin(),\n  ];\n}\n","import isHotkey from 'is-hotkey';\nimport { isVoidBlockFirstAndFocused, insertParagraphAndFocusToStartOfDocument } from './Util';\n\n/**\n *  Provides a way to insert content before the first void block in the document.\n */\nexport const InsertBeforeFirstVoidBlockPlugin = () => ({\n  onKeyDown: (event, editor, next) => {\n    if (isHotkey('enter', event) && isVoidBlockFirstAndFocused(editor)) {\n      insertParagraphAndFocusToStartOfDocument(editor);\n      return;\n    }\n\n    return next();\n  },\n});\n","import { BLOCKS } from '@contentful/rich-text-types';\n/**\n * Checks if the first block in the document is void and is focused.\n *\n * @param {Slate.Editor} editor\n * @returns {Boolean}\n */\nexport function isVoidBlockFirstAndFocused(editor) {\n  return (\n    editor.value.document.getBlocks().first() === editor.value.focusBlock &&\n    editor.isVoid(editor.value.focusBlock)\n  );\n}\n\n/**\n * Inserts and focuses an empty paragraph as a first child to the document.\n *\n * @param {Slate.Editor} editor\n * @returns {void}\n */\n\nexport function insertParagraphAndFocusToStartOfDocument(editor) {\n  editor.splitBlock().moveToStartOfDocument().setBlocks(BLOCKS.PARAGRAPH).focus();\n}\n","import isHotkey from 'is-hotkey';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { toggleChange } from '../shared/BlockToggleDecorator';\nimport CommonNode from '../shared/NodeDecorator';\n\nconst plugin = (type, tagName, tagProps, hotkey) => {\n  return {\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === type) {\n        return CommonNode(tagName, tagProps)(props);\n      }\n      return next();\n    },\n    onKeyDown: (e, editor, next) => {\n      if (isHotkey(hotkey, e)) {\n        editor.call(toggleChange, type);\n        return;\n      }\n      return next();\n    },\n  };\n};\n\n// TODO: move hotkeys to components\nexport const ParagraphPlugin = (type = BLOCKS.PARAGRAPH) =>\n  // Can't use <p/> as for e.g. links we need to show a tooltip inside.\n  plugin(type, 'div', {}, ['mod+opt+0']);\n","import { getEventTransfer } from 'slate-react';\nimport { create as createSerializer } from './Serializer';\n\n/**\n * The plugin allows to paste html to the Structured Text Editor\n * by deserializing html content from ClipboardEvent into\n * Slate document.\n */\nexport const PasteHtmlPlugin = () => {\n  const serializer = createSerializer();\n  return {\n    onPaste(event, editor, next) {\n      const transfer = getEventTransfer(event);\n      if (transfer.type != 'html') {\n        next();\n        return;\n      }\n      const { document } = serializer.deserialize(transfer.html);\n\n      editor.insertFragment(document);\n      return;\n    },\n  };\n};\n","import { getEventTransfer } from 'slate-react';\nimport PlainSerializer from 'slate-plain-serializer';\nimport { BLOCKS } from '@contentful/rich-text-types';\n\n/**\n * This plugin changes how pasting text is handled in the Rich text editor by\n * deserializing text content from ClipboardEvent into a Slate document. We\n * use it to handle converting new lines to paragraphs. Without this plugin,\n * lines of text separated by an empty new line will result in extra empty\n * paragraphs.\n */\nexport const PasteTextPlugin = () => {\n  return {\n    onPaste(event, editor, next) {\n      const transfer = getEventTransfer(event);\n      if (transfer.type !== 'text') {\n        next();\n        return;\n      }\n\n      const string = transfer.text;\n\n      const { document } = PlainSerializer.deserialize(string, {\n        defaultBlock: BLOCKS.PARAGRAPH,\n        delimiter: '\\n\\n', // We look for double new lines as a delimiter for paragraphs\n      });\n\n      editor.insertFragment(document);\n      return;\n    },\n  };\n};\n","import isHotkey from 'is-hotkey';\n\nexport default function () {\n  return {\n    onKeyDown(event, editor, next) {\n      if (isHotkey('shift+enter', event)) {\n        editor.insertText('\\n');\n        return;\n      }\n      return next();\n    },\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Menu } from '@contentful/f36-components';\n\nimport { PlusIcon, ChevronDownIcon } from '@contentful/f36-icons';\n\nclass EntryEmbedDropdown extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    isOpen: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpen: PropTypes.func,\n  };\n\n  render() {\n    const { onOpen, isOpen, onClose, children } = this.props;\n    return (\n      <Menu placement=\"bottom-end\" isOpen={isOpen} onClose={onClose} onOpen={onOpen}>\n        <Menu.Trigger>\n          <Button\n            endIcon={<ChevronDownIcon />}\n            testId=\"toolbar-entry-dropdown-toggle\"\n            className=\"toolbar-entry-dropdown-toggle\"\n            variant=\"secondary\"\n            size=\"small\"\n            startIcon={<PlusIcon />}\n            isDisabled={this.props.disabled}>\n            Embed\n          </Button>\n        </Menu.Trigger>\n        <Menu.List className=\"toolbar-entry-dropdown-list\">{children}</Menu.List>\n      </Menu>\n    );\n  }\n}\n\nexport default EntryEmbedDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Flex } from '@contentful/f36-components';\n\nimport Bold from '../plugins/Bold';\nimport Italic from '../plugins/Italic';\nimport Underlined from '../plugins/Underlined';\nimport Code from '../plugins/Code';\nimport Quote from '../plugins/Quote';\nimport {\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n  Heading5,\n  Heading6,\n  Paragraph,\n  HeadingDropdown,\n} from '../plugins/Heading';\n\nimport Hyperlink from '../plugins/Hyperlink';\nimport { css } from 'emotion';\n\nimport EmbeddedEntryInline from '../plugins/EmbeddedEntryInline';\nimport EmbeddedEntityBlock from '../plugins/EmbeddedEntityBlock';\nimport EntryEmbedDropdown from '../plugins/EntryEmbedDropdown';\n\nimport { UnorderedList, OrderedList } from '../plugins/List';\nimport Hr from '../plugins/Hr';\n\nimport { BLOCKS, MARKS, INLINES } from '@contentful/rich-text-types';\n\nimport { isNodeTypeEnabled, isMarkEnabled } from '../validations';\nimport tokens from '@contentful/f36-tokens';\n\nconst styles = {\n  toolbar: css({\n    border: `1px solid ${tokens.gray400}`,\n    backgroundColor: tokens.gray100,\n    padding: tokens.spacingXs,\n    borderRadius: `${tokens.borderRadiusMedium} ${tokens.borderRadiusMedium} 0 0`,\n  }),\n  divider: css({\n    display: 'inline-block',\n    height: '21px',\n    width: '1px',\n    background: tokens.gray300,\n    margin: `0 ${tokens.spacing2Xs}`,\n  }),\n  embedActionsWrapper: css({\n    display: ['-webkit-box', '-ms-flexbox', 'flex'],\n    webkitAlignSelf: 'flex-start',\n    alignSelf: 'flex-start',\n    msFlexItemAlign: 'start',\n    marginLeft: 'auto',\n  }),\n  formattingOptionsWrapper: css({\n    display: ['-webkit-box', '-ms-flexbox', 'flex'],\n    msFlexAlign: 'center',\n    webkitBoxAlign: 'center',\n    alignItems: 'center',\n    msFlexWrap: 'wrap',\n    flexWrap: 'wrap',\n    marginRight: '20px',\n  }),\n};\n\nexport default class Toolbar extends React.Component {\n  static propTypes = {\n    richTextAPI: PropTypes.object.isRequired,\n    isDisabled: PropTypes.bool.isRequired,\n    editor: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  hasMounted = false;\n\n  isReadyToSetFocusProgrammatically = false;\n\n  state = {\n    headingMenuOpen: false,\n    canAccessAssets: false,\n    ...getValidationInfo(this.props.richTextAPI.sdk.field),\n  };\n\n  componentDidMount() {\n    this.hasMounted = true;\n    this.props.richTextAPI.sdk.access.can('read', 'Asset').then((canReadAssets) => {\n      if (this.hasMounted) {\n        // Prevent setting state on unmounted component\n        this.setState({ canAccessAssets: canReadAssets });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.hasMounted = false;\n  }\n\n  onChange = (...args) => {\n    this.setState({ headingMenuOpen: false });\n    this.props.onChange(...args);\n  };\n\n  handleEmbedDropdownOpen = () =>\n    this.setState({\n      isEmbedDropdownOpen: true,\n    });\n\n  handleEmbedDropdownClose = () =>\n    this.setState({\n      isEmbedDropdownOpen: false,\n    });\n\n  renderEmbeds = (props) => {\n    const field = this.props.richTextAPI.sdk.field;\n\n    const inlineEntryEmbedEnabled = isNodeTypeEnabled(field, INLINES.EMBEDDED_ENTRY);\n    const blockEntryEmbedEnabled = isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ENTRY);\n    const blockAssetEmbedEnabled =\n      this.state.canAccessAssets && isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ASSET);\n\n    const numEnabledEmbeds = [\n      inlineEntryEmbedEnabled,\n      blockEntryEmbedEnabled,\n      blockAssetEmbedEnabled,\n    ].filter(Boolean).length;\n\n    return (\n      <div className={styles.embedActionsWrapper}>\n        {numEnabledEmbeds > 1 ? (\n          <EntryEmbedDropdown\n            onOpen={this.handleEmbedDropdownOpen}\n            isOpen={this.state.isEmbedDropdownOpen}\n            disabled={props.disabled}\n            onClose={this.handleEmbedDropdownClose}>\n            {blockEntryEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ENTRY} {...props} />\n            )}\n            {inlineEntryEmbedEnabled && <EmbeddedEntryInline {...props} />}\n            {blockAssetEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ASSET} {...props} />\n            )}\n          </EntryEmbedDropdown>\n        ) : (\n          <React.Fragment>\n            {blockEntryEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ENTRY} isButton {...props} />\n            )}\n            {inlineEntryEmbedEnabled && <EmbeddedEntryInline isButton {...props} />}\n            {blockAssetEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ASSET} isButton {...props} />\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  };\n\n  openHeadingMenu = () =>\n    this.setState({\n      headingMenuOpen: true,\n    });\n\n  closeHeadingMenu = () =>\n    this.setState({\n      headingMenuOpen: false,\n    });\n\n  render() {\n    const { editor, isDisabled, richTextAPI } = this.props;\n    if (editor.value.selection.isFocused) {\n      // If the Slate input has ever been focused by the user, we can now also\n      // programmatically use `editor.setFocus()` without undesired side-effects.\n      this.isReadyToSetFocusProgrammatically = true;\n    }\n    const props = {\n      editor,\n      onToggle: this.onChange,\n      disabled: isDisabled,\n      richTextAPI,\n      canAutoFocus: this.isReadyToSetFocusProgrammatically,\n    };\n    const { field } = richTextAPI.sdk;\n    const { isAnyHyperlinkEnabled, isAnyListEnabled, isAnyMarkEnabled } = this.state;\n    const currentBlockType = props.editor.value.blocks.getIn([0, 'type']);\n    return (\n      <Flex testId=\"toolbar\" className={styles.toolbar} alignItems=\"center\">\n        <div className={styles.formattingOptionsWrapper}>\n          <HeadingDropdown\n            onOpen={this.openHeadingMenu}\n            isToggleActive={true}\n            isOpen={this.state.headingMenuOpen}\n            onClose={this.closeHeadingMenu}\n            currentBlockType={currentBlockType}\n            disabled={props.disabled}>\n            <Paragraph {...props} />\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_1) && <Heading1 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_2) && <Heading2 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_3) && <Heading3 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_4) && <Heading4 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_5) && <Heading5 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_6) && <Heading6 {...props} />}\n          </HeadingDropdown>\n          {isAnyMarkEnabled && <span className={styles.divider} data-test-id=\"mark-divider\" />}\n          {isMarkEnabled(field, MARKS.BOLD) && <Bold {...props} />}\n          {isMarkEnabled(field, MARKS.ITALIC) && <Italic {...props} />}\n          {isMarkEnabled(field, MARKS.UNDERLINE) && <Underlined {...props} />}\n          {isMarkEnabled(field, MARKS.CODE) && <Code {...props} />}\n          {isAnyHyperlinkEnabled && (\n            <React.Fragment>\n              <span className={styles.divider} data-test-id=\"hyperlink-divider\" />\n              <Hyperlink {...props} />\n            </React.Fragment>\n          )}\n          {isAnyListEnabled && <span className={styles.divider} data-test-id=\"list-divider\" />}\n          {isNodeTypeEnabled(field, BLOCKS.UL_LIST) && <UnorderedList {...props} />}\n          {isNodeTypeEnabled(field, BLOCKS.OL_LIST) && <OrderedList {...props} />}\n          {isNodeTypeEnabled(field, BLOCKS.QUOTE) && <Quote {...props} />}\n          {isNodeTypeEnabled(field, BLOCKS.HR) && <Hr {...props} />}\n        </div>\n        {this.renderEmbeds(props)}\n      </Flex>\n    );\n  }\n}\n\nfunction getValidationInfo(field) {\n  const isAnyMarkEnabled =\n    isMarkEnabled(field, MARKS.BOLD) ||\n    isMarkEnabled(field, MARKS.ITALIC) ||\n    isMarkEnabled(field, MARKS.UNDERLINE) ||\n    isMarkEnabled(field, MARKS.CODE);\n\n  const isAnyHyperlinkEnabled =\n    isNodeTypeEnabled(field, INLINES.HYPERLINK) ||\n    isNodeTypeEnabled(field, INLINES.ASSET_HYPERLINK) ||\n    isNodeTypeEnabled(field, INLINES.ENTRY_HYPERLINK);\n\n  const isAnyListEnabled =\n    isNodeTypeEnabled(field, BLOCKS.UL_LIST) ||\n    isNodeTypeEnabled(field, BLOCKS.OL_LIST) ||\n    isNodeTypeEnabled(field, BLOCKS.QUOTE) ||\n    isNodeTypeEnabled(field, BLOCKS.HR);\n  return {\n    isAnyMarkEnabled,\n    isAnyHyperlinkEnabled,\n    isAnyListEnabled,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nconst styles = {\n  nativeSticky: css`\n    position: -webkit-sticky;\n    position: sticky;\n    top: -1px;\n    z-index: 2;\n  `,\n};\n\nconst StickyToolbarWrapper = ({ isDisabled, children }) => (\n  <div className={isDisabled ? '' : styles.nativeSticky}>{children}</div>\n);\n\nStickyToolbarWrapper.propTypes = {\n  isDisabled: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default StickyToolbarWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Editor } from 'slate-react';\nimport { Value, Editor as BasicEditor } from 'slate';\nimport noop from 'lodash/noop';\nimport debounce from 'lodash/debounce';\nimport { List, is } from 'immutable';\nimport deepEquals from 'fast-deep-equal';\n\nimport { BLOCKS, EMPTY_DOCUMENT } from '@contentful/rich-text-types';\nimport { toContentfulDocument, toSlatejsDocument } from '@contentful/contentful-slatejs-adapter';\nimport { EntityProvider } from '@contentful/field-editor-reference';\n\nimport schema from './constants/Schema';\nimport { createRichTextAPI } from './plugins/shared/PluginApi';\nimport { buildPlugins } from './plugins';\nimport Toolbar from './Toolbar';\nimport StickyToolbarWrapper from './Toolbar/StickyToolbarWrapper';\nimport { FieldConnector } from '@contentful/field-editor-shared';\nimport { css, cx } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nconst STYLE_EDITOR_BORDER = `1px solid ${tokens.gray400}`;\n\nconst styles = {\n  root: css({\n    position: 'relative',\n  }),\n  editor: css({\n    borderRadius: `0 0 ${tokens.borderRadiusMedium} ${tokens.borderRadiusMedium}`,\n    border: STYLE_EDITOR_BORDER,\n    borderTop: 0,\n    padding: '20px',\n    fontFamily: tokens.fontStackPrimary,\n    fontSize: tokens.spacingM,\n    minHeight: '380px',\n    background: tokens.colorWhite,\n    outline: 'none',\n    whiteSpace: 'pre-wrap',\n    overflowWrap: 'break-word',\n    webkitUserModify: 'read-write-plaintext-only',\n    a: {\n      span: {\n        cursor: 'not-allowed',\n        '&:hover': {\n          cursor: 'not-allowed',\n        },\n      },\n    },\n  }),\n  hiddenToolbar: css({\n    borderTop: STYLE_EDITOR_BORDER,\n  }),\n  enabled: css({\n    background: tokens.colorWhite,\n    a: {\n      span: {\n        cursor: 'pointer',\n        '&:hover': {\n          cursor: 'pointer',\n        },\n      },\n    },\n  }),\n  disabled: css({\n    background: tokens.gray100,\n  }),\n};\n\nconst createSlateValue = (contentfulDocument) => {\n  const document = toSlatejsDocument({\n    document: contentfulDocument,\n    schema,\n  });\n  const value = Value.fromJSON({\n    document,\n    schema,\n  });\n  // Normalize document instead of doing this in the Editor instance as this would\n  // trigger unwanted operations that would result in an unwanted version bump.\n  // TODO: This normalization step wouldn't be necessary if we had a perfect\n  // adapter for the version of Slate we are currently using.\n  const editor = new BasicEditor({ readOnly: true, value }, { normalize: true });\n  const normalizedValue = editor.value;\n  return normalizedValue;\n};\n\nconst EMPTY_SLATE_DOCUMENT = createSlateValue(EMPTY_DOCUMENT);\n\nexport class ConnectedRichTextEditor extends React.Component {\n  static propTypes = {\n    minHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    sdk: PropTypes.shape({\n      field: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        locale: PropTypes.string.isRequired,\n      }).isRequired,\n      access: PropTypes.shape({\n        can: PropTypes.func.isRequired,\n      }).isRequired,\n      parameters: PropTypes.shape({\n        instance: PropTypes.shape({\n          getEntryUrl: PropTypes.func,\n          getAssetUrl: PropTypes.func,\n        }).isRequired,\n      }),\n    }).isRequired,\n    value: PropTypes.object,\n    isDisabled: PropTypes.bool,\n    onChange: PropTypes.func,\n    onAction: PropTypes.func,\n    isToolbarHidden: PropTypes.bool,\n    actionsDisabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    value: EMPTY_DOCUMENT,\n    onChange: noop,\n    onAction: noop,\n    isDisabled: false,\n    isToolbarHidden: false,\n    actionsDisabled: false,\n  };\n\n  state = {\n    lastOperations: List(),\n    value:\n      this.props.value && this.props.value.nodeType === BLOCKS.DOCUMENT\n        ? createSlateValue(this.props.value)\n        : EMPTY_SLATE_DOCUMENT,\n  };\n\n  editor = React.createRef();\n\n  richTextAPI = createRichTextAPI({\n    sdk: this.props.sdk,\n    onAction: this.props.onAction,\n  });\n\n  slatePlugins = buildPlugins(this.richTextAPI);\n\n  onChange = (editor) => {\n    const { value, operations } = editor;\n    this.setState({\n      value,\n      lastOperations: operations.filter(isRelevantOperation),\n    });\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.isDisabled !== nextProps.isDisabled) {\n      return true;\n    }\n    const isStateValueUpdate = !is(this.state.value, nextState.value);\n    const isPropsValueUpdate = this.props.value !== nextProps.value;\n    return isStateValueUpdate || isPropsValueUpdate;\n  }\n\n  callOnChange = debounce(() => {\n    const doc = toContentfulDocument({\n      document: this.state.value.document.toJSON(),\n      schema,\n    });\n    this.props.onChange(doc);\n  }, 500);\n\n  componentDidUpdate(prevProps) {\n    /* eslint-disable react/no-did-update-set-state */\n    const isIncomingChange = () => !deepEquals(prevProps.value, this.props.value);\n    const isDocumentChanged = !this.state.lastOperations.isEmpty();\n\n    if (!this.props.isDisabled && isDocumentChanged) {\n      this.setState({ lastOperations: List() }, () => this.callOnChange());\n    } else if (isIncomingChange()) {\n      this.setState({\n        value: createSlateValue(this.props.value),\n      });\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleKeyDown = (event, editor, next) => {\n    const ESC = 27;\n\n    if (event.keyCode === ESC) {\n      event.currentTarget.blur();\n    }\n\n    return next();\n  };\n\n  render() {\n    const classNames = cx(\n      styles.editor,\n      this.props.minHeight !== undefined ? css({ minHeight: this.props.minHeight }) : undefined,\n      this.props.isDisabled ? styles.disabled : styles.enabled,\n      this.props.isToolbarHidden && styles.hiddenToolbar\n    );\n\n    return (\n      <div className={styles.root} data-test-id=\"rich-text-editor\">\n        {!this.props.isToolbarHidden && (\n          <StickyToolbarWrapper isDisabled={this.props.isDisabled}>\n            <Toolbar\n              editor={this.editor.current || new BasicEditor({ readOnly: true })}\n              onChange={this.onChange}\n              isDisabled={this.props.isDisabled}\n              richTextAPI={this.richTextAPI}\n            />\n          </StickyToolbarWrapper>\n        )}\n\n        <Editor\n          data-test-id=\"editor\"\n          value={this.state.value}\n          ref={this.editor}\n          onChange={this.onChange}\n          onKeyDown={this.handleKeyDown}\n          plugins={this.slatePlugins}\n          readOnly={this.props.isDisabled}\n          className={classNames}\n          actionsDisabled={this.props.actionsDisabled}\n          options={{\n            normalize: false, // No initial normalizaiton as we pass a normalized document.\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * Returns whether a given operation is relevant enough to trigger a save.\n *\n * @param {slate.Operation} op\n * @returns {boolean}\n */\nfunction isRelevantOperation(op) {\n  if (op.type === 'set_value') {\n    if (op.properties.data) {\n      // Relevant for undo/redo that can be empty ops that we want to ignore.\n      return false;\n    }\n  } else if (op.type === 'set_selection') {\n    return false;\n  }\n  return true;\n}\n\nexport default function RichTextEditor(props) {\n  /* eslint-disable react/prop-types */\n  const { sdk, isInitiallyDisabled, ...otherProps } = props;\n  return (\n    <EntityProvider sdk={sdk}>\n      Example test\n      <FieldConnector\n        throttle={0}\n        field={sdk.field}\n        isInitiallyDisabled={isInitiallyDisabled}\n        isEmptyValue={(value) => {\n          return !value || deepEquals(value, EMPTY_DOCUMENT);\n        }}\n        isEqualValues={(value1, value2) => {\n          return deepEquals(value1, value2);\n        }}>\n        {({ lastRemoteValue, disabled, setValue, externalReset }) => {\n          return (\n            <ConnectedRichTextEditor\n              {...otherProps}\n              // on external change reset component completely and init with initial value again\n              key={`rich-text-editor-${externalReset}`}\n              value={lastRemoteValue}\n              sdk={sdk}\n              isDisabled={disabled}\n              onChange={(value) => {\n                setValue(value);\n              }}\n            />\n          );\n        }}\n      </FieldConnector>\n    </EntityProvider>\n  );\n}\n\nRichTextEditor.defaultProps = {\n  isInitiallyDisabled: true,\n};\n","import React from 'react';\nimport { ModalDialogLauncher } from '@contentful/field-editor-shared';\nimport { HyperlinkDialog } from './HypelinkDialog/HyperlinkDialog';\n\nexport const openRichTextDialog = (sdk) => (options) => {\n  if (options.parameters && options.parameters.type === 'rich-text-hyperlink-dialog') {\n    return ModalDialogLauncher.openDialog(options, ({ onClose }) => {\n      return <HyperlinkDialog {...options.parameters} onClose={onClose} sdk={sdk} />;\n    });\n  }\n  return Promise.reject();\n};\n","import React from 'react';\nimport { HyperlinkDialog } from './HypelinkDialog/HyperlinkDialog';\n\nexport const renderRichTextDialog = (sdk) => {\n  const parameters = sdk.parameters.invocation;\n  if (parameters.type === 'rich-text-hyperlink-dialog') {\n    sdk.window.startAutoResizer();\n    return <HyperlinkDialog {...sdk.parameters.invocation} onClose={sdk.close} sdk={sdk} />;\n  }\n  return <div />;\n};\n"],"names":["opt","config","types","BLOCKS","OL_LIST","UL_LIST","typeItem","LIST_ITEM","typeDefault","PARAGRAPH","EditList","mapVoidTypes","nodeTypes","fromPairs","map","nodeType","isVoid","listPlugin","ListPlugin","document","nodes","TOP_LEVEL_BLOCKS","blocks","Object","values","INLINES","objects","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","VOID_BLOCKS","schema","QUOTE","match","CONTAINERS","type","min","normalize","editor","error","code","unwrapBlockByKey","node","key","inlines","HYPERLINK","ENTRY_HYPERLINK","ASSET_HYPERLINK","EMBEDDED_ENTRY","createActionLogger","onAction","origin","name","data","createRichTextAPI","sdk","logViewportAction","logShortcutAction","logToolbarAction","logCommandPaletteAction","TOOLBAR_PLUGIN_PROP_TYPES","richTextAPI","PropTypes","shape","object","isRequired","func","onToggle","disabled","bool","isButton","canAutoFocus","styles","button","css","height","width","marginLeft","tokens","spacing2Xs","marginRight","tooltip","zIndex","Number","zIndexTooltip","ToolbarIcon","handleClick","event","preventDefault","props","render","this","title","isActive","children","React","Button","className","cx","isDisabled","startIcon","onClick","testId","variant","size","Tooltip","placement","content","Component","propTypes","any","string","MarkPropTypes","attributes","mark","NodePropTypes","haveMarks","value","activeMarks","some","haveBlocks","haveInlines","inline","haveTextInSomeBlocks","block","text","bold","color","fontWeight","fontWeightDemiBold","italic","fontStyle","lineHeight","fontFamily","fontStackMonospace","fontSize","tagName","hotkey","renderMark","_editor","next","Tag","tagProps","CommonMark","displayName","markDecorator","onKeyDown","isHotkey","toggleMark","action","markType","toolbarActionHandlerWithSafeAutoFocus","component","customHandler","selection","isFocused","focus","Mark","handleToggle","_this","React.createElement","Bold","markToggleDecorator","MARKS","BOLD","FormatBoldIcon","ItalicPlugin","markPlugin","ITALIC","Italic","FormatItalicIcon","UnderlinedPlugin","UNDERLINE","Underlined","FormatUnderlinedIcon","CodePlugin","CODE","Code","CodeIcon","toggleChange","setBlocks","isBlockActive","applyChange","Block","isSelectionInQuote","ancestor","range","start","startBlock","getClosestBlock","getParent","unwrapBlock","wrapBlock","headingCss","fontWeightMedium","margin","spacingS","paragraph","lineHeightDefault","marginBottom","blockquote","borderLeft","gray200","paddingLeft","background","padding","gray700","borderRadius","borderRadiusSmall","textLink","orderedList","listStyleType","unorderedList","listItem","listStyle","spacingL","heading1","heading2","heading3","heading4","heading5","heading6","CommonNode","camelCase","QuotePlugin","defaultType","renderNode","commonNode","e","newPlugin","Blockquote","blockToggleDecorator","QuoteIcon","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","FetchingWrappedEntryCard","useEntities","getOrLoadEntry","loadEntityScheduledActions","entries","entryId","onEntityFetchComplete","MissingEntityCard","entityType","onRemove","EntryCard","isLoading","contentType","space","getCachedContentTypes","find","sys","id","WrappedEntryCard","getAsset","getEntityScheduledActions","entryUrl","getEntryUrl","isSelected","localeCode","locale","defaultLocaleCode","locales","onEdit","isClickable","FetchingWrappedAssetCard","getOrLoadAsset","assets","assetId","asset","AssetCard","src","href","WrappedAssetCard","getAssetUrl","entityToLink","entity","linkType","HyperlinkDialog","handleSubmit","onClose","getValue","selectEntry","entitySelectorConfigs","Entry","contentTypes","dialogs","selectSingleEntry","setTargetEntity","selectAsset","Asset","selectSingleAsset","uri","target","isEntityLink","Boolean","entityLinks","allowedHyperlinkTypes","includes","setState","isLinkComplete","hideText","labels","EntityProvider","Fragment","ModalContent","renderFields","ModalControls","_this2","confirm","isUriInputAutoFocused","Form","FormControl","Label","TextInput","onChange","_this3","autoFocus","isFeaturingEntitySelector","Select","Option","placeholder","HelpText","renderEntityField","entityLink","isEntitySelectorVisible","FormLabel","required","htmlFor","TextLink","as","_this4","renderEntitySelector","marginTop","oneOf","arrayOf","defaultProps","openHyperlinkDialog","isNew","showTextInput","openCurrent","shouldCloseOnEscapePress","shouldCloseOnOverlayClick","allowHeightOverflow","parameters","field","flow","v","get","validations","newEntitySelectorConfigFromRichTextField","getEntityTypeFromRichTextNode","getLinkedContentTypeIdsForNodeType","words","split","indexOf","isFormattingOptionEnabled","validationType","nodeTypeOrMark","enabledFormattings","getRichTextValidation","isNodeTypeEnabled","isMarkEnabled","HYPERLINK_TYPES","nodeToHyperlinkType","getAllowedHyperlinkTypes","hyperlinkTypes","filter","getEntitySelectorConfigs","mayEditLink","isExpanded","hasHyperlink","hasOnlyHyperlinkInlines","every","toggleLink","logAction","removeLinks","insertLink","change","blur","fragment","trim","last","insertBlock","insertText","moveFocusForward","wrapLink","linkTypeToNodeType","unwrapInline","editLink","link","toJSON","oldUri","oldTarget","setInlines","wrapInline","moveToEnd","HyperlinkToolbarIcon","LinkIcon","hyperlinkWrapper","display","position","a","hyperlink","fill","textColorDark","hyperlinkIEFallback","textDecoration","hyperlinkIcon","top","webkitTransition","transition","browser","detectBrowser","SUPPORTS_NATIVE_SLATE_HYPERLINKS","entityId","getEntity","getEntry","contentTypeId","ct","entityTitle","entityHelpers","getEntryTitle","defaultTitle","getAssetTitle","entityDescription","getEntityDescription","jobs","entityStatus","getEntryStatus","contentTypeName","Hyperlink","test","requestStatus","useState","setRequestStatus","useEffect","fetchAllData","_target$sys","_target$sys2","entityInfo","console","log","useRequestStatus","isHotKey","stopPropagation","role","tabIndex","tooltipContent","toLowerCase","str","substr","replace","getScheduleTooltipContent","job","jobsCount","getTooltipContent","tooltipContainer","targetWrapperClassName","maxWidth","rel","HyperlinkPlugin","isHyperlink","moveToRangeOfNode","normalizeNode","removeNodeByKey","getInlines","inlineNode","unwrapInlineByKey","root","h1","h2","h3","h4","h5","h6","getStyleForType","ToolbarDropdownListItem","Menu","Item","label","isInitiallyFocused","handleSelect","contentWidthDefault","blockTitles","EMBEDDED_ASSET","HeadingDropdown","getStyleNameForChange","currentBlockType","isOpen","onOpen","Trigger","endIcon","ChevronDownIcon","List","newHeadingDropdownItem","Heading","blockSelectDecorator","Paragraph","shouldToggle","offset","initialRange","splitBlock","setBlocksAtRange","Heading1Plugin","Heading2Plugin","Heading3Plugin","Heading4Plugin","Heading5Plugin","Heading6Plugin","Heading1","Heading2","Heading3","Heading4","Heading5","Heading6","selectEntityAndInsert","baseConfig","selectEntity","withCreate","focusNextLine","linkedEntityBlock","createNode","EntityLinkToolbarIcon","handleAction","getEntityTypeFromNodeType","baseClass","AssetIcon","EmbeddedEntryBlockIcon","Flex","alignItems","flexDirection","Icon","LinkedEntityBlock","handleEditClick","getEntitySys","navigator","openAsset","openEntry","slideIn","handleRemoveClick","readOnly","actionsDisabled","instance","EmbeddedEntityBlockPlugin","EntityLinkBlock","hasBlockOfType","createInlineNode","insertInline","moveToStartOfNextText","selectEntryAndInsert","canInsertInline","icon","span","webkitUserSelect","mozUserSelect","msUserSelect","userSelect","EntryLinkToolbarIcon","EmbeddedEntryInlineIcon","scheduledIcon","verticalAlign","FetchingWrappedInlineEntryCard","InlineEntryCard","Text","status","actions","MenuItem","isReadOnly","ScheduledIconWithTooltip","ClockIcon","EmbeddedEntryInline","EmbeddedEntryInlinePlugin","end","hasOnlyInlineEntryInSelection","utils","changes","unwrapList","wrapInList","isSelectionInList","getCurrentList","currentList","setNodeByKey","list","UnorderedList","listToggleDecorator","ListBulletedIcon","OrderedList","ListNumberedIcon","hr","spacingM","gray300","hrSelected","colorPrimary","Hr","HR","HorizontalRuleIcon","getCharacterCount","contentfulSlateJSAdapter","documentToPlainTextString","PastePlugin","onPaste","_event","characterCountSelection","global","getSelection","characterCountBefore","setTimeout","characterCountAfter","BLOCK_TAGS","p","ul","ol","MARK_TAGS","strong","b","em","u","RULES","deserialize","el","ownerDocument","querySelector","startsWith","isGoogleWrapper","childNodes","marks","style","isGoogleBold","isGoogleItalic","isGoogleUnderline","leaves","textContent","getAttribute","classList","contains","getCommandText","startText","textBefore","exec","removeCommand","command","anchorOffset","removeTextByKey","fetchAssets","query","getAssets","items","displayTitle","fields","thumbnail","file","url","fetchEntries","getEntries","content_type","all","description","isValidLinkedContentType","embedType","val","typeVal","linkContentType","reduce","pre","cur","CommandPaletteActionBuilder","maybeBuildEmbedAction","callback","buildAction","maybeBuildCreateAndEmbedAction","access","can","actionType","isAsset","isInline","group","commandPanel","colorWhite","boxShadow","border","gray400","borderRadiusMedium","fontStackPrimary","overflowY","commandPanelList","item","fontSizeM","spacingXs","borderBottom","gray900","divider","letterSpacing","letterSpacingWide","fontSizeS","textTransform","skeletonContainer","textAlign","whiteSpace","overflow","textOverflow","navBar","bottom","gray100","loader","instruction","gray600","closeButton","itemPropType","CommandPanelItem","listItemRef","componentDidUpdate","scrollIntoView","index","classNames","ref","alt","number","Instruction","CommandPanel","selectedKey","handleKeyboard","selectedItem","renderNavigationBar","SectionHeading","breadcrumb","IconButton","CloseIcon","renderStatusBar","instructions","isUpdating","Spinner","renderSkeleton","SkeletonContainer","SkeletonBodyText","numberOfLines","getDerivedStateFromProps","itemsHasUpdated","originalItems","searchStringHasUpdated","searchString","originalSearchString","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","renderGroups","groups","uniqBy","groupName","renderItems","_this5","cn","throttle","delay","lastCall","now","Date","getTime","isBrowser","window","InViewport","tGetDomPosition","nodeRef","lastOverflowAt","tOnOverflowTop","onOverflowTop","tOnOverflowBottom","onOverflowBottom","tOnOverflowRight","onOverflowRight","tOnOverflowLeft","onOverflowLeft","getDomPosition","html","documentElement","boundingClientRect","getBoundingClientRect","windowWidth","innerWidth","clientWidth","windowHeight","innerHeight","clientHeight","handleOverflow","bindEventListeners","left","right","leftThreshold","rightThreshold","bottomThreshold","otherProps","DEFAULT_POSITION","CommandPalette","anchorPosition","panelPosition","paletteDimensions","handleScroll","handleOutsideClick","removeEventListeners","palette","isClosed","requestUpdate","currentCommand","createCommands","leading","trailing","createCommand","onCreateAndEmbedEntity","createAsset","createEntry","createEntity","createContentTypeActions","actionBuilder","clearCommand","createAssetActions","nodeName","updatePanelPosition","allEntries","isComponentMounted","createInitialCommands","allContentTypes","flatten","contentTypeActions","assetActions","prevState","isEscKey","cancel","body","ReactDOM","createPortal","outline","minWidth","zIndexDropdown","CommandPanelMenu","anchorRect","getRangeAt","PureComponent","embedsEnabled","decorations","getDecorations","isEmpty","commandPaletteDecoration","d","hasCommandPaletteDecoration","CommandMark","CommandPalettePlugin","decorateNode","_node","others","decoration","inputValue","anchor","getDecorationOrDefault","renderEditor","_props","commandMark","buildPlugins","getBlocks","first","focusBlock","isVoidBlockFirstAndFocused","moveToStartOfDocument","insertParagraphAndFocusToStartOfDocument","EditListWrapper","serializer","HtmlSerializer","rules","transfer","getEventTransfer","insertFragment","PlainSerializer","defaultBlock","delimiter","TrailingBlock","EntryEmbedDropdown","PlusIcon","toolbar","backgroundColor","embedActionsWrapper","webkitAlignSelf","alignSelf","msFlexItemAlign","formattingOptionsWrapper","msFlexAlign","webkitBoxAlign","msFlexWrap","flexWrap","Toolbar","hasMounted","isReadyToSetFocusProgrammatically","headingMenuOpen","canAccessAssets","getValidationInfo","handleEmbedDropdownOpen","isEmbedDropdownOpen","handleEmbedDropdownClose","renderEmbeds","inlineEntryEmbedEnabled","blockEntryEmbedEnabled","blockAssetEmbedEnabled","numEnabledEmbeds","EmbeddedEntityBlock","openHeadingMenu","closeHeadingMenu","canReadAssets","isAnyHyperlinkEnabled","isAnyListEnabled","isAnyMarkEnabled","getIn","isToggleActive","Quote","nativeSticky","StickyToolbarWrapper","STYLE_EDITOR_BORDER","borderTop","minHeight","overflowWrap","webkitUserModify","cursor","hiddenToolbar","enabled","createSlateValue","contentfulDocument","toSlatejsDocument","Value","fromJSON","BasicEditor","EMPTY_SLATE_DOCUMENT","EMPTY_DOCUMENT","ConnectedRichTextEditor","lastOperations","DOCUMENT","createRef","slatePlugins","operations","isRelevantOperation","callOnChange","debounce","doc","toContentfulDocument","handleKeyDown","keyCode","currentTarget","shouldComponentUpdate","nextProps","nextState","is","prevProps","isDocumentChanged","deepEquals","isToolbarHidden","current","Editor","plugins","options","op","properties","RichTextEditor","isInitiallyDisabled","FieldConnector","isEmptyValue","isEqualValues","value1","value2","setValue","externalReset","lastRemoteValue","oneOfType","noop","ModalDialogLauncher","openDialog","invocation","startAutoResizer","close"],"mappings":"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"}